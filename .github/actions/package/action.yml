name: package
description: Package module
inputs:
  base_directory:
    description: The module directory
    required: true
  spec_file:
    description: The spec file path to build rpm
    required: true
  package_extension:
    description: The package extension (deb or rpm)
    required: true
  frontend_index_cache_key:
    description: The index.html cache key
  frontend_index_file:
    description: The index.html file path
  frontend_static_cache_key:
    description: The static directory cache key
  frontend_static_directory:
    description: The static directory
  backend_vendor_cache_key:
    description: The vendor directory cache key
  backend_vendor_directory:
    description: The vendor directory
  translation_cache_key:
    description: The translation directory cache key
  translation_directory:
    description: The translation directory
  module_name:
    description: The module name
    required: true
  major_version:
    description: The major version
    required: true
  minor_version:
    description: The minor version
    required: true
  release:
    description: The release number
    required: true
  cache_key:
    description: The package files cache key
    required: true

runs:
  using: composite

  steps:
    - name: Restore index file cache
      if: "${{ inputs.frontend_index_file != '' && inputs.frontend_index_cache_key != '' }}"
      uses: actions/cache@v3
      with:
        path: ${{ inputs.frontend_index_file }}
        key: ${{ inputs.frontend_index_cache_key }}

    - name: Restore static directory cache
      if: "${{ inputs.frontend_static_directory != '' && inputs.frontend_static_cache_key != '' }}"
      uses: actions/cache@v3
      with:
        path: ${{ inputs.frontend_static_directory }}
        key: ${{ inputs.frontend_static_cache_key }}

    - name: Restore vendor directory cache
      if: "${{ inputs.backend_vendor_directory != '' && inputs.backend_vendor_cache_key != '' }}"
      uses: actions/cache@v3
      with:
        path: ${{ inputs.backend_vendor_directory }}
        key: ${{ inputs.backend_vendor_cache_key }}

    - name: Restore translation directory cache
      if: "${{ inputs.translation_directory != '' && inputs.translation_cache_key != '' }}"
      uses: actions/cache@v3
      with:
        path: ${{ inputs.translation_directory }}
        key: ${{ inputs.translation_cache_key }}

    - if: ${{ inputs.package_extension == 'rpm' }}
      run: |
        VERSION=${{ inputs.major_version }}.${{ inputs.minor_version }}
        RELEASE=${{ inputs.release }}
        MODULE_BASENAME=`basename ${{ inputs.base_directory }}`

        mkdir -p ~/rpmbuild/{BUILD,BUILDROOT,RPMS,SOURCES,SPECS,SRPMS}

        mkdir $MODULE_BASENAME-$VERSION
        cp -rp ${{ inputs.base_directory }} $MODULE_BASENAME-$VERSION/

        tar czf ~/rpmbuild/SOURCES/$MODULE_BASENAME-$VERSION.tar.gz $MODULE_BASENAME-$VERSION

        if [ -d "$MODULE_BASENAME/packaging/src" ]; then
          cp -rp $MODULE_BASENAME/packaging/src/* ~/rpmbuild/SOURCES/
        fi

        rpmbuild -ba ${{ inputs.spec_file }} -D "PACKAGE_NAME $MODULE_BASENAME" -D "PACKAGE_VERSION $VERSION" -D "PACKAGE_RELEASE $RELEASE"

        cp -r ~/rpmbuild/RPMS/noarch/*.rpm .

        chmod 777 *.rpm
      shell: bash

    - if: ${{ inputs.package_extension == 'deb' }}
      run: |
        set -x

        VERSION=${{ inputs.major_version }}.${{ inputs.minor_version }}
        RELEASE=${{ inputs.release }}
        MODULE_BASENAME=`basename ${{ inputs.base_directory }}`

        cd ${{ inputs.base_directory }}/..
        cp -r $MODULE_BASENAME/packaging/debian ./$MODULE_BASENAME
        tar czf $MODULE_BASENAME-$VERSION.tar.gz $MODULE_BASENAME
        cd ./$MODULE_BASENAME

        ls -lath .

        if [ -f "debian/substvars" ]; then
          sed -i "s/^centreon:version=.*$/centreon:version=$(echo $VERSION | egrep -o '^[0-9][0-9].[0-9][0-9]')/" debian/substvars
        fi

        debmake -f "Centreon" -e "contact@centreon.com" -u "$VERSION" -y -r "bullseye"
        debuild-pbuilder --no-lintian

        # This makes shure that widget pkgs end up in the same dir as non widgets
        if [[ $MODULE_BASENAME = "centreon-widget"* ]]; then
          find / -name "*centreon-widget*.deb" -exec mv {} ../../ \;
        fi
        ls -lath ..
      shell: bash

    - name: Upload package artifacts
      uses: actions/upload-artifact@v3
      with:
        name: packages-${{ inputs.package_extension }}
        path: ./*.${{ inputs.package_extension }}
        retention-days: 7

    - name: Cache packaged files
      uses: actions/cache@v3
      with:
        path: ./*.${{ inputs.package_extension }}
        key: ${{ inputs.cache_key }}
