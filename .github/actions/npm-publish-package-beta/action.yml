name: NPM publish
description: This publishes a package to NPM and creates a PR to update the package version

inputs:
  directory:
    description: The package directory
    required: true
  pat:
    description: The Github PAT
    required: true
  npm_token:
    description: The NPM token
    required: true
  package:
    description: The frontend package
    required: true
  version:
    description: The version
    default: latest
  release_branch:
    description: The release branch
    required: true

runs:
  using: "composite"
  steps:
    - uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4.0.2
      with:
        node-version: 20

    - uses: pnpm/action-setup@fe02b34f77f8bc703788d5817da081398fad5dd2 # v4.0.0
      with:
        version: 8

    - name: Install action dependencies
      run: pnpm install --frozen-lockfile
      working-directory: ./.github/actions/get-latest-npm-branch-version
      shell: bash

    - name: Get current package version
      id: currentVersion
      run: echo "current_package_version=`cat package.json | jq -r '.version'`" >> $GITHUB_OUTPUT
      shell: bash
      working-directory: ${{ env.directory }}

    - uses: ./.github/actions/get-latest-npm-branch-version
      id: get-latest-npm-beta-branch-version
      with:
        package: ${{ inputs.package }}
        branch_name: ${{ github.head_ref }}
        current_package_version: ${{ steps.currentVersion.outputs.current_package_version }}

    - name: Write beta NPM package version
      if: ${{ steps.get-latest-npm-beta-branch-version.outputs.package_version != '' && steps.get-latest-npm-beta-branch-version.outputs.package_version != steps.currentVersion.outputs.current_package_version }}
      run: npm version ${{ steps.get-latest-npm-beta-branch-version.outputs.package_version }} --legacy-peer-deps
      working-directory: ${{ env.directory }}
      shell: bash

    - name: Configure tag
      run: |
        echo "TAG=${{ github.head_ref }}" >> $GITHUB_ENV
      shell: bash

    - name: Bump NPM package version
      run: |
        PREID=$(echo "${{ github.head_ref }}" | sed "s/\./-/g")
        npm version prerelease --preid $PREID --legacy-peer-deps
        VERSION=$(node -p "require('./package.json').version")
        rm ../../package-lock.json
        echo "VERSION=$VERSION" >> $GITHUB_ENV
      working-directory: ${{ env.directory }}
      shell: bash

    - name: Publish package to NPM (${{ env.TAG }})
      uses: JS-DevTools/npm-publish@v2
      with:
        access: public
        package: ${{ env.directory }}/package.json
        tag: ${{ env.TAG }}
        token: ${{ inputs.npm_token }}
