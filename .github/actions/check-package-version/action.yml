name: Check package version
description: The checks the package version validity

inputs:
  base_branch:
    description: The branch to base on
    required: true
  directory:
    description: The package directory
    required: true

runs:
  using: "composite"
  steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ inputs.base_branch }}

      - name: Get base version
        run: |
          BASE_VERSION=$(node -p "require('./package.json').version")
          echo "BASE_VERSION=$BASE_VERSION" >> $GITHUB_ENV
        shell: bash
        working-directory: ${{ inputs.directory }}

      - uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref || github.ref_name }}

      - name: Get current version
        run: |
          NEW_VERSION=$(node -p "require('./package.json').version")
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV
        shell: bash
        working-directory: ${{ inputs.directory }}

      - name: Check versions
        id: check-versions
        uses: madhead/semver-utils@latest
        with:
          version: ${{ env.BASE_VERSION }}
          compare-to: ${{ env.NEW_VERSION }}

      - name: Result comparison
        run: '[[ "<" == "${{ steps.check-versions.outputs.comparison-result }}" || "=" == "${{ steps.check-versions.outputs.comparison-result }}" ]] && echo "The version is valid" || (echo "The version is invalid. Please upgrade your package.json to ${{ env.BASE_VERSION }}" && exit 1)'
        shell: bash
