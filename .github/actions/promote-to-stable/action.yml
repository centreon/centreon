name: "promote testing to stable"
description: "Promote testing packages to stable."
inputs:
  artifactory_token:
    description: "Artifactory token"
    required: true
  module:
    description: "Module"
    required: true
  distrib:
    description: "The distribution used for packaging"
    required: true
  major_version:
    description: "Centreon packaged major version"
    required: true
  minor_version:
    description: "Centreon package minor version"
    required: true
  stability:
    description: "The package stability (stable, testing, unstable)"
    required: true

runs:
  using: "composite"
  steps:
    - uses: jfrog/setup-jfrog-cli@v3
      env:
        JF_URL: https://centreon.jfrog.io
        JF_ACCESS_TOKEN: ${{ inputs.artifactory_token }}

    - name: Promote RPM packages to stable
      if: ${{ startsWith(inputs.distrib, 'el') }}
      run: |
        set -x
        echo "[DEBUG] - Major version: ${{ inputs.major_version }}"
        echo "[DEBUG] - Minor version: ${{ inputs.minor_version }}"
        echo "[DEBUG] - Distrib: ${{ inputs.distrib }}"

        echo "[DEBUG] - Get path of testing RPM packages to promote to stable."
        SRC_PATHS+=$(jf rt s --include-dirs --fail-no-op rpm-standard/${{ inputs.major_version }}/${{ inputs.distrib }}/testing/noarch/${{ inputs.module }}/*.rpm | jq -r '.[].path')
        echo "[DEBUG] - Source path: $SRC_PATHS"

        echo "[DEBUG] - Build target path."
        TARGET_PATH="rpm-standard/${{ inputs.major_version }}/${{ inputs.distrib }}/${{ inputs.stability }}/noarch/RPMS/"
        echo "[DEBUG] - Target path: $TARGET_PATH"

        echo "[DEBUG] - Promoting RPM testing artifacts to stable."
        for ARTIFACT in $(echo "$SRC_PATHS"); do
          echo "[DEBUG] - Promoting $ARTIFACT to stable."
          jf rt cp $ARTIFACT $TARGET_PATH --flat=true
        done

      shell: bash

    - name: Promote DEB package to stable
      if: ${{ startsWith(inputs.distrib, 'bullseye') }}
      run: |
        echo "[DEBUG] - Major version: ${{ inputs.major_version }}"
        echo "[DEBUG] - Minor version: ${{ inputs.minor_version }}"
        echo "[DEBUG] - Distrib: ${{ inputs.distrib }}"

        echo "[DEBUG] - Get path to dir with testing artifacts to promote to stable."
        SRC_PATH=$(jf rt s --include-dirs --fail-no-op apt-standard-${{ inputs.major_version }}-testing/pool/*${{ inputs.module }}*${{ inputs.major_version }}.${{ inputs.minor_version }}*.deb | jq -r '.[].path')
        echo "[DEBUG] - Source path: $SRC_PATH"

        echo "[DEBUG] - Promote DEB packages to repository: ${{ inputs.stability }}"
        TARGET_PATH="apt-standard-${{ inputs.major_version }}-${{ inputs.stability }}/pool/"
        echo "[DEBUG] - Target path: $TARGET_PATH"

        echo "[DEBUG] - Promoting DEB testing artifacts to stable."
        for ARTIFACT in $(echo "$SRC_PATHS"); do
          echo "[DEBUG] - Promoting $ARTIFACT to stable."
          jf rt cp $ARTIFACT $TARGET_PATH --flat=true
        done

      shell: bash
