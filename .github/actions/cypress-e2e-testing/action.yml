name: "Cypress E2E Testing"
description: "Cypress E2E Testing"
inputs:
  name:
    description: "test name"
    required: true
  web_image_os:
    description: "Web image operating system"
    required: true
  web_image_version:
    description: "Web image version"
    required: true
  openid_image_version:
    description: "Openid image version"
    required: true
  module:
    description: "module"
    required: true
  feature_file_path:
    description: "feature file"
    required: true
  dependencies_lock_file:
    description: "The frontend dependencies lock file path"
    required: true
  test_execution_key:
    description: "xray test execution key"
    required: true

runs:
  using: "composite"
  steps:
    - uses: pnpm/action-setup@d882d12c64e032187b2edb46d3a0d003b7a43598 # v2.4.0
      with:
        version: 8
        run_install: false

    - uses: actions/setup-node@1a4442cacd436585916779262731d5b162bc6ec7 # v3.8.2
      with:
        node-version: 20
        cache: pnpm
        cache-dependency-path: ${{ inputs.dependencies_lock_file }}

    - name: Install dependencies
      run: pnpm install --frozen-lockfile
      working-directory: ${{ inputs.module }}/tests/e2e
      shell: bash
      env:
        CYPRESS_INSTALL_BINARY: "0"
        PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: "1"
        PUPPETEER_SKIP_CHROMIUM_DOWNLOAD: "true"

    - name: Install Cypress binary
      uses: nick-fields/retry@v2
      with:
        timeout_seconds: 120
        max_attempts: 10
        retry_wait_seconds: 30
        retry_on: error
        command: cd ${{ inputs.module }}/tests/e2e && pnpm cypress install --force

    - name: Cypress end-to-end testing
      uses: cypress-io/github-action@v6
      with:
        command: pnpm run cypress:run --browser chromium --spec features/**/${{ inputs.feature_file_path }}
        install: false
        working-directory: ${{ inputs.module }}/tests/e2e
        publish-summary: false
      env:
        CYPRESS_VERIFY_TIMEOUT: "60000"
        CYPRESS_WEB_IMAGE_OS: ${{ inputs.web_image_os }}
        CYPRESS_WEB_IMAGE_VERSION: ${{ inputs.web_image_version }}
        CYPRESS_OPENID_IMAGE_VERSION: ${{ inputs.openid_image_version }}

    - name: Rename JSON report
      if: ${{ always() }}
      run: |
        feature_name=$(basename "${{ inputs.feature_file_path }}")
        report_path="${{ inputs.module }}/tests/e2e/cypress/cucumber-logs/report.json"
        report_path_updated="${{ inputs.module }}/tests/e2e/cypress/cucumber-logs/${feature_name}-report.json"

        jq 'if length > 0 then .[0] |= (.tags |= map(if .name | startswith("@REQ_MON-") then .name |= "@${{ inputs.test_execution_key }}" else . end)) | (.[] |= (if has("elements") then .elements[].tags |= map(if .name | startswith("@REQ_MON-") then .name |= "@${{ inputs.test_execution_key }}" else . end) else . end)) else . end' "$report_path" > "$report_path_updated"

        rm "$report_path"

        # Show the content of the modified file
        echo "::group::${feature_name}-report.json"
        cat "$report_path_updated"
        echo "::endgroup::"
      shell: bash
