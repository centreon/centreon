name: QG incident tracking
description: Create Jira ticket on Veracode QG failure

inputs:
  jira_base_url:
    required: true
    description: jira base url
  jira_user_email:
    required: true
    description: jira user email
  jira_api_token:
    required: true
    description: jira api token
  module_name:
    required: true
    description: module name

runs:
  using: "composite"
  steps:
    - name: Check if ticket exists already
      id: check_ticket
      run: |
        # Checking if an incident ticket already exists
        check_if_ticket_exists=$( curl --request POST \
          --url '${{ inputs.jira_base_url }}/rest/api/3/search' \
          --user '${{ inputs.jira_user_email }}:${{ inputs.jira_api_token }}' \
          --header 'Accept: application/json' \
          --header 'Content-Type: application/json' \
          --data '{
            "fields": ["summary"],
            "jql": "project = MON AND parentEpic = AT-268 AND issueType = Technical AND summary ~ \"PR-${{ github.event.pull_request.number }} incident\" AND component = \"${{ inputs.module_name }}\" AND resolution = unresolved ORDER BY key ASC",
            "maxResults": 1
        }' | jq .issues[0].key )

        if [[ "$check_if_ticket_exists" != "null" ]]; then
          echo "abort_ticket_creation=true" >> $GITHUB_ENV
          echo "::error::ticket found as $check_if_ticket_exists aborting ticket creation"
        fi
      shell: bash

    - name: Create Jira Issue
      if: ${{ env.abort_ticket_creation != 'true' }}
      run: |
        # Creating a new incident ticket on Jira
        DATA=$( cat <<-EOF
        {
          "fields": {
            "summary": "PR-${{ github.event.pull_request.number }} incident on ${{ inputs.module_name }}",
            "project": {"key": "MON"},
            "issuetype": {"id": "10209"},
            "parent": {"id": "83818", "key": "AT-268"},
            "labels": ["Veracode", "Pipeline"],
            "components":[{"name": "${{ inputs.module_name }}"}],
            "customfield_10902": {"id": "10524", "value": "DevSecOps"},
            "customfield_10005": 1.0,
            "description": {"version": 1,"type": "doc","content": [
              {"type": "paragraph","content": [{"type": "text","text": "This incident ticket relates to:"}]},
              {"type": "bulletList","content": [
                {"type": "listItem","content": [{"type": "paragraph","content": [{"type": "text","text": "Ref: "},{"type": "text","text": "PR-${{ github.event.pull_request.number }}","marks": [{"type": "link","attrs": {"href": "${{ github.event.pull_request.html_url }}"}}]}]}]}
              ]},
              {"type": "paragraph","content": []},
              {"type": "bulletList","content": [
                {"type": "listItem","content": [{"type": "paragraph","content": [{"type": "text","text": "Target: "},{"type": "text","text": "${{ github.base_ref || github.ref_name }}","marks": [{"type": "strong"}]}]}]},
                {"type": "listItem","content": [{"type": "paragraph","content": [{"type": "text","text": "Link to the job","marks": [{"type": "link","attrs": {"href": "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"}}]}]}]}
              ]},
              {"type": "paragraph","content": []}
            ]}
          }
        }
        EOF
        )

        create_ticket_ang_get_id=$( curl --request POST \
          --url "${{ inputs.jira_base_url }}/rest/api/3/issue" \
          --user "${{ inputs.jira_user_email }}:${{ inputs.jira_api_token }}" \
          --header 'Accept: application/json' \
          --header 'Content-Type: application/json' \
          --data "$DATA" | jq .key )

        echo "::error::Incident ticket created as $create_ticket_ang_get_id"
      shell: bash
