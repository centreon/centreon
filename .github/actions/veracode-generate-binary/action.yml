name: "veracode-generate-binary"
description: "Prepare binary to be analyzed"
inputs:
  module_directory:
    description: Path to the module
    required: true
  cache_key:
    description: key used to identify the cache
    required: true

runs:
  using: "composite"
  steps:
    - name: Exclude development files
      run: |
        cd ${{ inputs.module_directory }}
        if [[ -f ".veracode-exclusions" ]]; then
          for LINE in $( cat .veracode-exclusions | sed 's/[^a-zA-Z0-9_./-]//g' | sed -r 's/\.\./\./g' ); do
            if [[ -d "$LINE" ]]; then
              rm -rf "$LINE"
              echo "[INFO] - folder removed from analysis : '$LINE'"
            elif [[ -e "$LINE" ]]; then
              rm -f "$LINE"
              echo "[INFO] - file removed from analysis : '$LINE'"
            elif [[ -z "$LINE" ]]; then
              echo "[INFO] - empty directive. Skipping this line"
            else
              echo "[INFO] - target to exclude not found. Skipping: '$LINE'"
            fi
          done
        else
          echo "[INFO] - No '.veracode-exclusions' file found for this module. Skipping exclusion step"
        fi
      shell: bash

    - name: Create zip file
      run: |
        if [[ -z "${{ inputs.module_directory }}" || -z "${{ inputs.cache_key }}" ]]; then
          echo "[DEBUG] - At least one mandatory argument is missing. killing process"
          exit 1
        fi
        cd ${{ inputs.module_directory }}
        zip -rq "${{ inputs.cache_key }}.zip" *
      shell: bash

    - uses: actions/cache/save@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9 # v4.0.2
      with:
        path: "${{ inputs.module_directory }}/${{ inputs.cache_key }}.zip"
        key: ${{ inputs.cache_key }}
