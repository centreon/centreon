---
name: Centreon Modules

on: pull_request

env:
  version: "22.10"


jobs:
  filters:
    runs-on: common
    outputs:
      frontend: ${{ steps.filter.outputs.frontend }}
      web: ${{ steps.filter.outputs.web }}
      widgets: ${{ steps.filter.outputs.widgets }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Check Path Changed
        uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            frontend:
              - 'centreon-frontend/**'
            web:
              - 'centreon/**'
            widgets:
              - 'widgets/**'

  frontend-test:
    needs: filters
    runs-on: common
    strategy:
      matrix:
        include:
          - rules: frontend
            image: test-frontend-open-source-bullseye
    if: ${{ needs.filters.outputs.frontend == 'true' }}
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Test Frontend
        uses: ./.github/actions/runner-docker
        with:
          script_name: frontend-test-${{ matrix.rules }}
          image_name: ${{ matrix.image }}
          image_version: ${{ env.version }}

  web-test:
    needs: filters
    runs-on: common
    strategy:
      matrix:
        include:
          - rules: frontend
            image: test-frontend-open-source-bullseye
          - rules: backend
            image: test-backend-open-source-alpine
    if: ${{ needs.filters.outputs.web == 'true' }}
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Test Web
        uses: ./.github/actions/runner-docker
        with:
          script_name: web-test-${{ matrix.rules }}
          image_name: ${{ matrix.image }}
          image_version: ${{ env.version }}
  
  web-packaging:
    runs-on: common
    needs: filters
    
    strategy:
      matrix:
        include:
          - image: packaging-web-centos7
            distrib: el7
          - image: packaging-web-alma8
            distrib: el8
          # - image: packaging-web-bullseye
          #   distrib: bullseye

    if: ${{ needs.filters.outputs.web == 'true' }}
    steps: 
      - name: Checkout sources
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: 'Get tag'
        uses: oprypin/find-latest-tag@v1
        with:
          repository: centreon-internal/centreon-monorepoc-open-source
          prefix: '${{ env.version }}.'
        id: tag

      - name: Package
        uses: ./.github/actions/runner-docker
        with:
          script_name: web-packaging
          image_name: ${{ matrix.image }}
          image_version: ${{ env.version }}
          params: ${{ steps.tag.outputs.tag }} ${{ github.sha }}

      - name: Sign 
        uses: ./.github/actions/runner-docker
        with:
          script_name: rpm-signing
          image_name: rpm-signing
          image_version: ubuntu
          
      - name: Use cache RPM files
        uses: actions/cache@v3
        env:
          cache-name-rpmbuild: cache-${{ github.sha }}-${{ github.run_id }}-rpmbuild-web
        with:
          path: ./*.rpm
          key: ${{ env.cache-name-rpmbuild }}-${{ matrix.distrib }}
      
  delivery-rpm:
    needs: [web-packaging, web-test, frontend-test]
    runs-on: common
    strategy:
      matrix:
        include:
          - module_name: web
            distrib: el7

          - module_name: web
            distrib: el8
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Delivery
        uses: ./.github/actions/rpm-delivery
        with:
          module_name: ${{ matrix.module_name }}
          distrib: ${{ matrix.distrib }}
          version: ${{ env.version }}
          nexus_username: ${{ secrets.NEXUS_RPMS_REPOSITORY_USERNAME }}
          nexus_password: ${{ secrets.NEXUS_RPMS_REPOSITORY_PASSWORD }}
  
  create-and-push-docker:
    needs: [web-packaging, web-test, frontend-test]
    runs-on: common
    
    strategy:
      matrix:
        include:
          - project: run-centreon-open-source
            distrib: centos7
            distrib_rpm: el7
            version: "22.10"
            module_name: web

    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Login to Registry
        uses: docker/login-action@v2
        with:
          registry: docker.registry.apps.centreon.com
          username: ${{ secrets.NEXUS_RPMS_REPOSITORY_USERNAME }}
          password: ${{ secrets.NEXUS_RPMS_REPOSITORY_PASSWORD }}

      - name: build docker run
        uses: ./.github/actions/docker-builder-run
        with:
          distrib: ${{ matrix.distrib }}
          project: ${{ matrix.project }}
          distrib_rpm: ${{ matrix.distrib_rpm }}
          module_name: ${{ matrix.module_name }}


  widgets-packaging:
    needs: [create-and-push-docker-widgets]

    uses: ./.github/workflows/module_workflow.yml
    with:
      module_name: widgets
      version: "22.10"
    secrets:
      nexus_username: ${{ secrets.NEXUS_RPMS_REPOSITORY_USERNAME }}
      nexus_password: ${{ secrets.NEXUS_RPMS_REPOSITORY_PASSWORD }}

  create-and-push-docker-widgets:
    needs: filters
    if: ${{ needs.filters.outputs.widgets == 'true' }}
    runs-on: common
    
    strategy:
      matrix:
        include:
          - project: widgets-package
            distrib_redhat: centos7
            distrib_debian: debian11
            distrib_rpm: el7
            distrib_deb: deb11
            version: "22.10"
            module_name: widgets

    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Login to Registry
        uses: docker/login-action@v2
        with:
          registry: docker.registry.apps.centreon.com
          username: ${{ secrets.NEXUS_RPMS_REPOSITORY_USERNAME }}
          password: ${{ secrets.NEXUS_RPMS_REPOSITORY_PASSWORD }}

      - name: build redhat docker run for widgets
        uses: ./.github/actions/widgets-docker-builder
        with:
          distrib_redhat: ${{ matrix.distrib_redhat }}
          project: ${{ matrix.project }}
          distrib_rpm: ${{ matrix.distrib_rpm }}
          module_name: ${{ matrix.module_name }}

      - name: build debian docker run for widgets
        uses: ./.github/actions/widgets-docker-builder
        with:
          distrib_debian: ${{ matrix.distrib_debian }}
          project: ${{ matrix.project }}
          distrib_deb: ${{ matrix.distrib_deb }}
          module_name: ${{ matrix.module_name }}

