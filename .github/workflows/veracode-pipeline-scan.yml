name: Veracode pipeline scans

on:
  push:
    branches:
      # These pipelines will generate the cache
      - master
      - "[2-9][0-9].[0-9][0-9].x"
      - develop
      - dev-[2-9][0-9].[0-9][0-9].x
      - AT-94-pipeline-scan #TODO: to remove - intended to test the pipeline
  pull_request:
    branches:
      # These pipelines will use the cache
      - master
      #- "[2-9][0-9].[0-9][0-9].x"
      #- develop
      #- dev-[2-9][0-9].[0-9][0-9].x

env:
  MODULE_DIRECTORY: centreon-dsm #TODO: Will be replaced by workflow's value
  MODULE_NAME: centreon-dsm #TODO: Will be replaced by workflow's value
  THRESHOLD: "High"
  CACHE_KEY: ${{ github.sha }}-${{ github.run_id }}
  #TARGET_BRANCH: ${{ github.base_ref || github.ref_name }} #Caution: required by veracode runner
  TARGET_BRANCH: ${{ github.base_ref || 'develop' }} #Forced to develop on push for testing purpose
  HEAD_REF: ${{ github.head_ref }} #Caution: required by veracode runner
  CRITICALITY: "VeryLow"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Generate binary file
        uses: ./.github/actions/veracode-generate-binary
        with:
          module_directory: ${{ env.MODULE_DIRECTORY }}
          module_name: ${{ env.MODULE_NAME }}
          target_branch_name: ${{ env.TARGET_BRANCH }}
          compile_mvn: "no"
          exclusion_file: "TODO"
          cache_key: ${{ env.CACHE_KEY }}

      - name: DEBUG - Github head ref
        run: echo ${{ github.head_ref }} #TODO: to remove

      - name: DEBUG - Github ref Name
        run: echo ${{ github.ref_name }} #TODO: to remove

      - name: DEBUG - Github base ref
        run: echo ${{ github.base_ref }} #TODO: to remove

      - name: DEBUG - Hello world
        run: echo Hello world from $GITHUB_BASE_REF #TODO: to remove

  pipeline-scan:
    runs-on: [self-hosted, veracode]
    needs: [build]
    steps:
      - uses: actions/checkout@v3

      - name: Get current time
        run: echo "$(date +'%Y-%m-%d %H:%M:%S')"

      - name: Get build binary
        uses: actions/cache/restore@v3
        with:
          path: "${{ env.MODULE_NAME }}-${{ env.TARGET_BRANCH }}.zip"
          key: ${{ env.CACHE_KEY }}

      - name: Get current time
        run: echo "$(date +'%Y-%m-%d %H:%M:%S')"

      - name: Get baseline from bucket
        uses: ./.github/actions/veracode-get-from-bucket
        with:
          module_name: ${{ env.MODULE_NAME }}
          target_branch_name: ${{ env.TARGET_BRANCH }}

      - name: Get current time
        run: echo "$(date +'%Y-%m-%d %H:%M:%S')"

      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 8

      - name: DEBUG - Get BASELINE value  #TODO: to remove
        run: echo "Baseline is set to  ${{ env.BASELINE_FILE }}"

      - name: DEBUG - why if fails ...
        if: env.BASELINE_FILE != ''
        run: echo "BASELINE_FILE is empty and ${{ env.BASELINE_FILE }}"

#      - name: Pipeline scan without baseline
#        if: env.BASELINE_FILE == ''
#        uses: veracode/Veracode-pipeline-scan-action@v1.0.3
#        with:
#          vid: ${{ secrets.VERACODE_API_ID }}
#          vkey: ${{ secrets.VERACODE_API_KEY }}
#          file: "${{ env.MODULE_NAME }}-${{ env.TARGET_BRANCH }}.zip"
#          fail_on_severity: ${{ env.THRESHOLD }}
#          #request_policy: "Centreon_Security"
#          fail_build: true
#          timeout: 60

      - name: Pipeline scan
#        if: env.BASELINE_FILE != ''
        uses: veracode/Veracode-pipeline-scan-action@v1.0.3
        with:
          vid: ${{ secrets.VERACODE_API_ID }}
          vkey: ${{ secrets.VERACODE_API_KEY }}
          file: "${{ env.MODULE_NAME }}-${{ env.TARGET_BRANCH }}.zip"
          fail_on_severity: ${{ env.THRESHOLD }}
          #request_policy: "Centreon_Security"
          fail_build: true
          timeout: 60
          baseline_file: ${{ env.BASELINE_FILE }}

      - name: Move baseline file
        run: mv results.json /tmp

      - name: Get current time
        run: echo "$(date +'%Y-%m-%d %H:%M:%S')"

      - name: Save baseline file
        if: env.HEAD_REF == 'develop' || env.HEAD_REF == 'dev-[2-9][0-9].[0-9][0-9].x' || env.HEAD_REF == 'master' || env.HEAD_REF == '[2-9][0-9].[0-9][0-9].x' || env.HEAD_REF == 'AT-94-pipeline-scan'
        run: |
          TARGET_S3="s3://centreon-veracode-reports/${{ env.MODULE_NAME }}/${{ env.TARGET_BRANCH }}/results.json"
          BASELINE_FILE="/tmp/results.json"
          aws s3 cp "$BASELINE_FILE" "$TARGET_S3"

      - name: Clean
        run: rm -f filtered_results.json /tmp/results.json

#  sandbox-scan:
#    # sandbox scans are triggered on maintenance branches only
#    runs-on: ubuntu-latest
#    needs: [build]
#    if: github.event_name != 'pull-request'
#    steps:
#      - name: Get current time
#        run: echo "$(date +'%Y-%m-%d %H:%M:%S')"
#
#      - name: Get build binary
#        uses: actions/cache/restore@v3
#        with:
#          path: "${{ env.MODULE_NAME }}-${{ env.TARGET_BRANCH }}.zip"
#          key: ${{ env.CACHE_KEY }}
#
#      - name: Get current time
#        run: echo "$(date +'%Y-%m-%d %H:%M:%S')"
#
#      - name: DEBUG - Check location
#        run: ls -la #TODO: to remove
#
#      - name: Veracode upload and run a Sandbox scan
#        uses: veracode/veracode-uploadandscan-action@master
#        id: upload_and_scan
#        with:
#          appname: "centreon/${{ env.MODULE_NAME }}_GHA"
#          createprofile: true
#          filepath: "${{ env.MODULE_NAME }}-${{ env.TARGET_BRANCH }}.zip"
#          version: "${{ env.TARGET_BRANCH }}"
#          #version: "${{ needs.get-version.outputs.major_version }}.${{ needs.get-version.outputs.minor_version }}"
#          vid: ${{ secrets.VERACODE_API_ID }}
#          vkey: ${{ secrets.VERACODE_API_KEY }}
#          createsandbox: true
#          sandboxname: "${{ env.TARGET_BRANCH }}"
#          scantimeout: 60
#          includenewmodules: true
#          scanallnonfataltoplevelmodules: true
#          deleteincompletescan: 1
#          criticality: "${{ env.CRITICALITY }}"
#
#      - name: DEBUG - Check location
#        run: ls -la #TODO: to remove
#
#      - name: Get current time
#        run: echo "$(date +'%Y-%m-%d %H:%M:%S')"
#
#  promote-sandbox-task:
#    needs: [build, sandbox-scan]
#    name: Promote a scan from sandbox
#    runs-on: ubuntu-latest
#    if: github.event_name != 'pull-request'
#
#    steps:
#      - name: Promote Scan on Approval
#        env:
#          VERACODE_API_ID: ${{ secrets.VERACODE_API_ID }}
#          VERACODE_API_SECRET: ${{ secrets.VERACODE_API_KEY }}
#        uses: lerer/veracode-sandboxes-helper@v1.0.1
#        with:
#          activity: "promote-latest-scan"
#          appname: "sc979/centreon"
#          sandbox-name: "${{ github.event.pull_request.base.repo.name }}-${{ github.ref_name }}"
#          delete-on-promote: true # Optional: also Deleting the Sandbox
