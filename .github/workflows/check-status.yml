name: check-status

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

on:
  pull_request:
    branches:
      - develop
      - dev-[2-9][0-9].[0-9][0-9].x
      - master
      - "[2-9][0-9].[0-9][0-9].x"
      - hotfix-*
      - release-*

jobs:
  check-status:
    runs-on: ubuntu-24.04
    steps:
      - name: Check workflow statuses and display token usage
        run: |
          echo "current token usage :"
          curl -s -H "Accept: application/vnd.github+json" -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" https://api.github.com/rate_limit
          echo ""
          curl -s -H "Accept: application/vnd.github+json" -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" https://api.github.com/rate_limit | jq .rate
          echo ""

      - uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_NUMBER: ${{ github.event.number }}
        with:
          script: |
            for (let i = 0; i < 60; i++) {
              let myOutput = '';
              let myError = '';

              const failure = [];
              const in_progress = [];

              const options = {};
              options.listeners = {
                stdout: (data) => {
                  myOutput += data.toString();
                },
                stderr: (data) => {
                  myError += data.toString();
                }
              };

              const pr_checks = await exec.exec(
                "gh pr checks --repo centreon/centreon ${{ env.PR_NUMBER }} --json name,state",
                [],
                options
              );

              JSON.parse(myOutput).forEach(({ name, state }) => {
                if (state.toLowerCase() === 'failure') {
                  failure.push(name);
                } else if (state.toLowerCase() === 'in_progress') {
                  in_progress.push(name);
                }
                console.log(`${name} => ${state}`);
              });

              if (in_progress.length === 0) {
                core.setFailed("Cannot get pull request check status");
                return;
              }

              if (failure.length > 0) {
                core.setFailed(`${failure.length} job(s) failed: ${failure.join(', ')}`);
                return;
              }

              if (in_progress.length === 1) {
                core.info("All jobs are ok");
                return;
              }

              await exec.exec("sleep 10s");
            }

            core.setFailed("Timeout: some jobs are still in progress");
