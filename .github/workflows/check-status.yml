name: check-status

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

on:
  pull_request:
    branches:
      - develop
      - dev-[2-9][0-9].[0-9][0-9].x
      - master
      - "[2-9][0-9].[0-9][0-9].x"
      - hotfix-*
      - release-*

jobs:
  check-status:
    runs-on: ubuntu-24.04
    steps:
      - name: Check workflow statuses and display token usage
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "current api rate usage:"
          curl -s -H "Accept: application/vnd.github+json" -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" https://api.github.com/rate_limit | jq .rate
          echo ""
          echo ""
          echo "current graphql rate usage:"
          curl -s -H "Accept: application/vnd.github+json" -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" https://api.github.com/rate_limit | jq .resources.graphql
          echo ""
          echo ""

      - uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_NUMBER: ${{ github.event.number }}
        with:
          script: |
            for (let i = 0; i < 60; i++) {
              let myOutput = '';
              let myError = '';

              const failure = [];
              const pending = [];

              const result = await github.rest.checks.listSuitesForRef({
                owner: context.repo.owner,
                repo: context.repo.repo,
                ref: "${{ github.event.pull_request.head.sha }}"
              });
              result.data.check_suites.forEach(({ app: { slug }, conclusion, id}) => {
                if (slug === 'github-actions') {
                  if (conclusion.toLowerCase() === 'failure') {
                    failure.push(id);
                  } else if (conclusion.toLowerCase() === 'pending') {
                    pending.push(id);
                  }
                }
                console.log(`${id} => ${conclusion}`);
              });

              if (pending.length === 0) {
                core.setFailed("Cannot get pull request check status");
                return;
              }

              if (failure.length > 0) {
                let failureMessage = '';
                failure.forEach((suite_id) => {/*
                  const resultCheckRuns = await github.rest.checks.listForSuite({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    check_suite_id: suite_id
                  });
                  resultCheckRuns.data.check_runs.forEach({ name, url } => {
                    failureMessage += ` ($name)[$url]`;
                  });*/
                  core.info(failureMessage);
                });

                core.setFailed(`${failure.length} job(s) failed: ${failure.join(', ')}`);
                return;
              }

              if (in_progress.length === 1) {
                core.info("All jobs are ok");
                return;
              }

              await exec.exec("sleep 10s");
            }

            core.setFailed("Timeout: some jobs are still in progress");

      - name: Check workflow statuses and display token usage
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "current api rate usage:"
          curl -s -H "Accept: application/vnd.github+json" -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" https://api.github.com/rate_limit | jq .rate
          echo ""
          echo ""
          echo "current graphql rate usage:"
          curl -s -H "Accept: application/vnd.github+json" -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" https://api.github.com/rate_limit | jq .resources.graphql
          echo ""
          echo ""
