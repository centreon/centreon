name: ha

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

on:
  workflow_dispatch:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
      - ready_for_review
    paths:
      - "centreon-ha/**"
      - "!centreon-ha/veracode.json"
      - "!centreon-ha/.veracode-exclusions"
  push:
    branches:
      - dev-[2-9][0-9].[0-9][0-9].x
      - "[2-9][0-9].[0-9][0-9].x"
    paths:
      - "centreon-ha/**"
      - "!centreon-ha/veracode.json"
      - "!centreon-ha/.veracode-exclusions"

env:
  module: ha

jobs:
  get-environment:
    uses: ./.github/workflows/get-environment.yml
    with:
      version_file: centreon-ha/.env

#   package:
#     needs: [get-environment]
#     if: ${{ needs.get-environment.outputs.stability != 'stable' }}

#     strategy:
#       fail-fast: true
#       matrix:
#         include:
#           - package_extension: rpm
#             image: packaging-alma8
#             distrib: el8
#           - package_extension: rpm
#             image: packaging-alma9
#             distrib: el9
#           - package_extension: deb
#             image: packaging-bookworm
#             distrib: bookworm

#     uses: ./.github/workflows/package.yml
#     with:
#       base_directory: centreon-ha
#       spec_file: centreon-ha/packaging/centreon-ha.spectemplate
#       package_extension: ${{ matrix.package_extension }}
#       image_name: ${{ matrix.image }}
#       module_name: ha
#       major_version: ${{ needs.get-environment.outputs.major_version }}
#       minor_version: ${{ needs.get-environment.outputs.minor_version }}
#       release: ${{ needs.get-environment.outputs.release }}
#       commit_hash: ${{ github.sha }}
#       cache_key: ${{ github.sha }}-${{ github.run_id }}-${{ matrix.package_extension }}-${{ matrix.distrib }}
#       distrib: ${{ matrix.distrib }}
#     secrets:
#       registry_username: ${{ secrets.HARBOR_CENTREON_PULL_USERNAME }}
#       registry_password: ${{ secrets.HARBOR_CENTREON_PULL_TOKEN }}

#   deliver-sources:
#     runs-on: [self-hosted, common]
#     needs: [get-environment, package]
#     if: ${{ contains(fromJson('["stable"]'), needs.get-environment.outputs.stability) && github.event_name != 'workflow_dispatch' }}

#     steps:
#       - name: Checkout sources
#         uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

#       - name: Deliver sources
#         uses: ./.github/actions/release-sources
#         with:
#           bucket_directory: centreon-ha
#           module_directory: centreon-ha
#           module_name: centreon-ha
#           major_version: ${{ needs.get-environment.outputs.major_version }}
#           minor_version: ${{ needs.get-environment.outputs.minor_version }}
#           token_download_centreon_com: ${{ secrets.TOKEN_DOWNLOAD_CENTREON_COM }}

#   delivery-rpm:
#     needs: [get-environment, package]
#     if: ${{ contains(fromJson('["testing", "unstable"]'), needs.get-environment.outputs.stability) }}
#     runs-on: [self-hosted, common]

#     strategy:
#       matrix:
#         distrib: [el8, el9]

#     steps:
#       - name: Checkout sources
#         uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

#       - name: Delivery
#         uses: ./.github/actions/rpm-delivery
#         with:
#           module_name: ha
#           distrib: ${{ matrix.distrib }}
#           version: ${{ needs.get-environment.outputs.major_version }}
#           artifactory_token: ${{ secrets.ARTIFACTORY_ACCESS_TOKEN }}
#           cache_key: ${{ github.sha }}-${{ github.run_id }}-rpm-${{ matrix.distrib }}
#           stability: ${{ needs.get-environment.outputs.stability }}
#           release_type: ${{ needs.get-environment.outputs.release_type }}
#           is_cloud: ${{ needs.get-environment.outputs.is_cloud }}

#   deliver-deb:
#     needs: [get-environment, package]
#     if: ${{ needs.get-environment.outputs.is_cloud == 'false' && contains(fromJson('["testing", "unstable"]'), needs.get-environment.outputs.stability) }}
#     runs-on: [self-hosted, common]

#     strategy:
#       matrix:
#         distrib: [bookworm]
#     steps:
#       - name: Checkout sources
#         uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

#       - name: Delivery
#         uses: ./.github/actions/deb-delivery
#         with:
#           module_name: ha
#           distrib: ${{ matrix.distrib }}
#           version: ${{ needs.get-environment.outputs.major_version }}
#           artifactory_token: ${{ secrets.ARTIFACTORY_ACCESS_TOKEN }}
#           cache_key: ${{ github.sha }}-${{ github.run_id }}-deb-${{ matrix.distrib }}
#           stability: ${{ needs.get-environment.outputs.stability }}
#           release_type: ${{ needs.get-environment.outputs.release_type }}
#           is_cloud: ${{ needs.get-environment.outputs.is_cloud }}

#   promote:
#     needs: [get-environment]
#     if: ${{ contains(fromJson('["stable"]'), needs.get-environment.outputs.stability) && github.event_name != 'workflow_dispatch' }}
#     runs-on: [self-hosted, common]
#     strategy:
#       matrix:
#         distrib: [el8, el9, bookworm]

#     steps:
#       - name: Checkout sources
#         uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

#       - name: Promote ${{ matrix.distrib }} to stable
#         uses: ./.github/actions/promote-to-stable
#         with:
#           artifactory_token: ${{ secrets.ARTIFACTORY_ACCESS_TOKEN }}
#           module: ha
#           distrib: ${{ matrix.distrib }}
#           major_version: ${{ needs.get-environment.outputs.major_version }}
#           minor_version: ${{ needs.get-environment.outputs.minor_version }}
#           stability: ${{ needs.get-environment.outputs.stability }}
#           github_ref_name: ${{ github.ref_name }}
#           release_type: ${{ needs.get-environment.outputs.release_type }}
#           is_cloud: ${{ needs.get-environment.outputs.is_cloud }}
