name: perl-cpan-libraries

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

on:
  workflow_dispatch:
  pull_request:
    paths:
      - ".github/workflows/perl-cpan-libraries.yml"
  push:
    branches:
      - develop
      - dev-[2-9][0-9].[0-9][0-9].x
      - master
      - "[2-9][0-9].[0-9][0-9].x"
    paths:
      - ".github/workflows/perl-cpan-libraries.yml"
    tags:
      - perl-cpan-libraries-*

jobs:
  get-version:
    uses: ./.github/workflows/get-version.yml
    with:
      version_file: centreon/www/install/insertBaseConf.sql

  package:
    needs: [get-version]
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        package_extension: [rpm, deb]
        name: [
          'HTTP::ProxyPAC',
          'Digest::SHA1',
          'JMX::Jmx4Perl',
          'Crypt::Blowfish_PP',
          'Device::Modbus::RTU::Client',
          'Device::Modbus::TCP::Client',
          'Email::Send::SMTP::Gmail',
          'Net::Curl',
          'Crypt::Argon2',
          'Convert::EBCDIC',
          'Device::Modbus',
        ]
        include:
          - use_dh_make_perl: false
          - package_extension: rpm
            image: packaging-alma9
          - package_extension: deb
            image: packaging-bullseye
          - name: 'Crypt::Blowfish_PP'
            use_dh_make_perl: true
    name: package ${{ matrix.package_extension }} ${{ matrix.name }}
    container:
      image: docker.centreon.com/${{ matrix.image }}:${{ needs.get-version.outputs.major_version }}
      credentials:
        username: ${{ secrets.NEXUS_RPMS_REPOSITORY_USERNAME }}
        password: ${{ secrets.NEXUS_RPMS_REPOSITORY_PASSWORD }}

    steps:
      - uses: actions/checkout@v3

      - if: ${{ matrix.package_extension == 'rpm' }}
        run: |
          echo ${{ matrix.use_dh_make_perl }}
          yum install -y yum-utils epel-release git
          yum config-manager --set-enabled crb

          yum install -y cpanminus rpm-build libcurl-devel expat-devel gcc ruby

          gem install fpm
          fpm -s cpan -t ${{ matrix.package_extension }} --verbose --cpan-verbose --no-cpan-test ${{ matrix.name }}
        shell: bash

      - if: ${{ matrix.package_extension == 'deb' && matrix.use_dh_make_perl == false }}
        run: |
          apt update
          apt install -y cpanminus ruby libcurl4-openssl-dev

          PACKAGE_NAME=`echo ${{ matrix.name }} | sed -e 's/::/-/g' | tr '[A-Z]' '[a-z]' | sed -e 's/^/lib/g' | sed -e 's/$/-perl/g'`

          gem install fpm
          fpm -s cpan -t ${{ matrix.package_extension }} --verbose --cpan-verbose --no-cpan-test -n $PACKAGE_NAME ${{ matrix.name }}
        shell: bash

      - if: ${{ matrix.package_extension == 'deb' && matrix.use_dh_make_perl == true }}
        run: |
          apt update
          apt install -y cpanminus libcurl4-openssl-dev dh-make-perl

          DEB_BUILD_OPTIONS="nocheck nodocs notest" dh-make-perl make --build --cpan ${{ matrix.name }}
        shell: bash

      - uses: actions/cache@v3
        with:
          path: ./*.${{ matrix.package_extension }}
          key: unsigned-${{ github.sha }}-${{ github.run_id }}-${{ matrix.package_extension }}

      - if: ${{ matrix.package_extension == 'rpm' }}
        uses: actions/upload-artifact@v3
        with:
          name: unsigned-packages-rpm
          path: ./*.rpm

  sign-rpm:
    needs: [package]
    runs-on: ubuntu-22.04
    container:
      image: docker.centreon.com/rpm-signing:ubuntu
      options: -t
      credentials:
        username: ${{ secrets.NEXUS_RPMS_REPOSITORY_USERNAME }}
        password: ${{ secrets.NEXUS_RPMS_REPOSITORY_PASSWORD }}

    steps:
      - run: apt-get install -y zstd
        shell: bash

      - uses: actions/checkout@v3

      - uses: actions/download-artifact@v3
        with:
          name: unsigned-packages-rpm
          path: ./

      - run: echo "HOME=/root" >> $GITHUB_ENV
        shell: bash

      - run: rpmsign --addsign ./*.rpm
        shell: bash

      - uses: actions/cache@v3
        with:
          path: ./*.rpm
          key: ${{ github.sha }}-${{ github.run_id }}-rpm

  deliver-rpm:
    needs: [get-version, sign-rpm]
    if: ${{ contains(fromJson('["stable", "testing", "unstable"]'), needs.get-version.outputs.stability) }}
    runs-on: [self-hosted, common]
    strategy:
      matrix:
        distrib: [el9]
        #distrib: [el7, el8, el9]

    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Delivery
        uses: ./.github/actions/rpm-delivery
        with:
          module_name: perl-cpan-libraries
          repository_name: standard
          distrib: ${{ matrix.distrib }}
          version: ${{ needs.get-version.outputs.major_version }}
          minor_version: 0
          release: ${{ needs.get-version.outputs.release }}
          nexus_username: ${{ secrets.NEXUS_RPMS_REPOSITORY_USERNAME }}
          nexus_password: ${{ secrets.NEXUS_RPMS_REPOSITORY_PASSWORD }}
          cache_key: ${{ github.sha }}-${{ github.run_id }}-rpm
          update_repo_path: ${{ secrets.UPDATE_REPO_PATH }}
          cloudfront_id: ${{ secrets.CLOUDFRONT_ID }}
          yum_repo_address: ${{ secrets.YUM_REPO_ADDRESS }}
          yum_repo_key: ${{ secrets.YUM_REPO_KEY }}
          stability: ${{ needs.get-version.outputs.stability }}

  deliver-deb:
    needs: [get-version, package]
    if: ${{ contains(fromJson('["stable", "testing", "unstable"]'), needs.get-version.outputs.stability) }}
    runs-on: [self-hosted, common]
    strategy:
      matrix:
        distrib: [bullseye]

    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Delivery
        uses: ./.github/actions/deb-delivery
        with:
          module_name: perl-cpan-libraries
          repository_name: standard
          distrib: ${{ matrix.distrib }}
          version: ${{ needs.get-version.outputs.major_version }}
          nexus_username: ${{ secrets.NEXUS_RPMS_REPOSITORY_USERNAME }}
          nexus_password: ${{ secrets.NEXUS_RPMS_REPOSITORY_PASSWORD }}
          cache_key: ${{ github.sha }}-${{ github.run_id }}-deb
          stability: ${{ needs.get-version.outputs.stability }}
