on:
  workflow_call:
    inputs:
      name:
        required: true
        type: string
      module_name:
        required: true
        type: string
      image_name:
        required: true
        type: string
      features_path:
        required: true
        type: string
      config_file:
        required: false
        type: string
        default: behat.yml
    secrets:
      registry_username:
        required: true
      registry_password:
        required: true
      composer_token:
        required: true

jobs:
  behat-test-list:
    runs-on: ubuntu-22.04
    outputs:
      features: ${{ steps.list-features.outputs.features }}

    steps:
      - name: Checkout sources
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - name: List features
        id: list-features
        run: |
          cd ${{ inputs.module_name }}
          echo "features=$(find ${{ inputs.features_path }} -type f -name "*.feature" -printf "%P\n" | sort | jq -R -s -c 'split("\n")[:-1]')" >> $GITHUB_OUTPUT

  behat-test-run:
    name: ""
    needs: [behat-test-list]
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        feature: ${{ fromJson(needs.behat-test-list.outputs.features) }}

    env:
      IMAGE_TAG: ${{ github.head_ref || github.ref_name }}
      SLIM_IMAGE_NAME: ${{ inputs.image_name }}-slim-alma8

    steps:
      - name: Checkout sources
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - name: Login to registry
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: ${{ vars.DOCKER_INTERNAL_REGISTRY_URL }}
          username: ${{ secrets.registry_username }}
          password: ${{ secrets.registry_password }}

      - name: Setup PHP
        uses: shivammathur/setup-php@6d7209f44a25a59e904b1ee9f3b0c33ab2cd888d # v2.29.0
        with:
          php-version: 8.1
          coverage: none
        env:
          COMPOSER_TOKEN: ${{ secrets.composer_token }}
          runner: ubuntu-22.04

      - name: Setup docker compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.20.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose

      - if: ${{ contains(matrix.feature, 'RestApi') }}
        uses: actions/setup-node@b39b52d1213e96004bfcb1c61a8a6fa8ab84f3e8 # v4.0.1
        with:
          node-version: 18

      - name: Install dependencies
        uses: ramsey/composer-install@c49029afecf85fda829d8c6c7f1b5f7b8bc3f7be # v2
        with:
          working-directory: ${{ inputs.module_name }}
          composer-options: "--optimize-autoloader"

      - name: Restore standard slim image in cache
        uses: actions/cache/restore@1bd1e32a3bdc45362d1e726936510720a7c30a57 # v4.2.0
        with:
          path: ./docker-image
          key: docker-image-${{ env.SLIM_IMAGE_NAME }}-${{ env.IMAGE_TAG }}
          fail-on-cache-miss: true

      - name: Load standard slim image
        run: |
          docker load --input ./docker-image/${{ env.SLIM_IMAGE_NAME }}.tar
          docker tag ${{ env.SLIM_IMAGE_NAME }}:${{ env.IMAGE_TAG }} ${{ vars.DOCKER_INTERNAL_REGISTRY_URL }}/${{ env.SLIM_IMAGE_NAME }}:${{ env.IMAGE_TAG }}
        shell: bash

      - name: Behat acceptance testing
        run: |
          WEB_IMAGE="${{ vars.DOCKER_INTERNAL_REGISTRY_URL }}/${{ env.SLIM_IMAGE_NAME }}:${{ env.IMAGE_TAG }}"
          rm -rf acceptance-logs && mkdir acceptance-logs
          rm -rf xunit-reports && mkdir xunit-reports
          sed \
            -e "s#@WEB_IMAGE@#$WEB_IMAGE#g" \
            -e "s#@WEB_FRESH_IMAGE@#${{ vars.DOCKER_INTERNAL_REGISTRY_URL }}/${{ inputs.image_name }}-fresh-alma8:${{ env.IMAGE_TAG }}#g" \
            ./.github/docker/docker-compose.yml > ${{ inputs.module_name }}/docker-compose.yml
          BASE_DIRECTORY=$(pwd)
          cd ${{ inputs.module_name }}
          ./vendor/bin/behat --config="${{ inputs.config_file }}" --format=pretty --out=std --format=junit --out="$BASE_DIRECTORY/xunit-reports" "${{ inputs.features_path }}/${{ matrix.feature }}"

      - name: Replace / with - in the feature path
        id: feature-path
        if: always()
        run: |
          feature_name="${{ matrix.feature }}"
          feature_name_with_dash="${feature_name//\//-}"
          echo "Modified Feature Name: $feature_name_with_dash"
          echo "feature_name_with_dash=$feature_name_with_dash" >> $GITHUB_OUTPUT

      - name: Clean empty reports
        if: ${{ !cancelled() }}
        run: find ./xunit-reports/* -type f | xargs grep -l -E "<testsuites.+></testsuites>" | xargs -r rm

      - if: failure()
        name: Display logs
        run: find ./acceptance-logs -type f | grep '.txt' | xargs -r more | cat
        shell: bash

      - uses: actions/upload-artifact@b4b15b8c7c6ac21ea08fcf65892d2ee8f75cf882 # v4.4.3
        if: failure()
        name: Upload acceptance test logs
        with:
          name: ${{ inputs.name }}-alma8-test-logs-${{ steps.feature-path.outputs.feature_name_with_dash }}
          path: acceptance-logs
          retention-days: 1

      - name: Upload Test Results
        if: failure()
        uses: actions/upload-artifact@b4b15b8c7c6ac21ea08fcf65892d2ee8f75cf882 # v4.4.3
        with:
          name: ${{ inputs.name }}-alma8-test-reports-${{ steps.feature-path.outputs.feature_name_with_dash }}
          path: xunit-reports
          retention-days: 1

  behat-test-report:
    needs: [behat-test-run]
    if: failure()
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - name: Download Artifacts
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        with:
          pattern: ${{ inputs.name }}-alma8-test-reports-*
          path: ${{ inputs.name }}-xunit-reports
          merge-multiple: true

      - uses: ./.github/actions/publish-report
        with:
          check_name: ${{ inputs.name }}-tests-report
          path: "${{ inputs.name }}-xunit-reports/**/*.xml"
