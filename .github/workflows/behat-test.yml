on:
  workflow_call:
    inputs:
      name:
        required: true
        type: string
      module_name:
        required: true
        type: string
      image_name:
        required: true
        type: string
      features_path:
        required: true
        type: string
      config_file:
        required: false
        type: string
        default: behat.yml
    secrets:
      nexus_username:
        required: true
      nexus_password:
        required: true
      composer_token:
        required: true

jobs:
  behat-test-list:
    runs-on: ubuntu-22.04
    outputs:
      features: ${{ steps.list-features.outputs.features }}

    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: List features
        id: list-features
        run: |
          cd ${{ inputs.module_name }}
          echo "features=$(find ${{ inputs.features_path }} -type f -name "*.feature" -printf "%P\n" | sort | jq -R -s -c 'split("\n")[:-1]')" >> $GITHUB_OUTPUT

  behat-test-run:
    needs: [behat-test-list]
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: true
      matrix:
        feature: ${{ fromJson(needs.behat-test-list.outputs.features) }}
    name: ${{ matrix.feature }}

    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Login to proxy registry
        uses: docker/login-action@v2
        with:
          registry: docker-proxy.centreon.com
          username: ${{ secrets.nexus_username }}
          password: ${{ secrets.nexus_password }}

      - name: Login to Registry
        uses: docker/login-action@v2
        with:
          registry: docker.centreon.com
          username: ${{ secrets.nexus_username }}
          password: ${{ secrets.nexus_password }}

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.1
          coverage: none
        env:
          COMPOSER_TOKEN: ${{ secrets.composer_token }}
          runner: ubuntu-22.04

      - name: Setup docker compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.11.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose

      - uses: actions/setup-node@v3
        with:
          node-version: 17

      - name: Install dependencies
        uses: ramsey/composer-install@v2
        with:
          working-directory: ${{ inputs.module_name }}
          composer-options: "--optimize-autoloader"

      - name: Behat acceptance testing
        run: |
          SELENIUM_IMAGE="docker-proxy.centreon.com/selenium/standalone-chrome:106.0"
          WEB_IMAGE="docker.centreon.com/${{ inputs.image_name }}-centos7:${{ github.head_ref || github.ref_name }}"
          rm -rf acceptance-logs && mkdir acceptance-logs
          rm -rf xunit-reports && mkdir xunit-reports
          sed \
            -e "s#@SELENIUM_IMAGE@#$SELENIUM_IMAGE#g" \
            -e "s#@WEB_IMAGE@#$WEB_IMAGE#g" \
            -e "s#@WEB_FRESH_IMAGE@#docker.centreon.com/${{ inputs.image_name }}-fresh-centos7:${{ github.head_ref || github.ref_name }}#g" \
            -e "s#@WEB_WIDGETS_IMAGE@#docker.centreon.com/${{ inputs.image_name }}-widgets-centos7:${{ github.head_ref || github.ref_name }}#g" \
            ./.github/docker/docker-compose.yml > ${{ inputs.module_name }}/docker-compose.yml
          BASE_DIRECTORY=`pwd`
          cd ${{ inputs.module_name }}
          ./vendor/bin/behat --config="${{ inputs.config_file }}" --format=pretty --out=std --format=junit --out="$BASE_DIRECTORY/xunit-reports" "${{ inputs.features_path }}/${{ matrix.feature }}"

      - name: Clean empty reports
        if: always()
        run: find ./xunit-reports/* -type f | xargs grep -l -E "<testsuites.+></testsuites>" | xargs rm

      - uses: actions/upload-artifact@v3
        if: ${{ failure() }}
        name: Upload acceptance test logs
        with:
          name: ${{ inputs.name }}-test-logs
          path: acceptance-logs

      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: ${{ inputs.name }}-test-reports
          path: xunit-reports

  behat-test-report:
    needs: [behat-test-run]
    if: always()
    runs-on: ubuntu-22.04

    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v3
        with:
          name: ${{ inputs.name }}-test-reports
          path: ${{ inputs.name }}-xunit-reports

      - name: Publish tests report
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: ${{ always() }}
        with:
          check_name: ${{ inputs.name }}-tests-report
          comment_mode: failures
          junit_files: ${{ inputs.name }}-xunit-reports/**/*.xml
