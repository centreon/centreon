name: web
run-name: ${{ (github.event_name == 'schedule' || (github.event_name == 'workflow_dispatch' && inputs.is_nightly == 'true')) && format('web nightly {0}', github.ref_name) || '' }}

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

on:
  workflow_dispatch:
    inputs:
      is_nightly:
        description: 'Set to true for nightly run'
        required: true
        default: false
        type: boolean
  schedule:
    - cron: "0 3 * * *"
  pull_request:
    paths:
      - "centreon/**"
  push:
    branches:
      - develop
      - dev-[2-9][0-9].[0-9][0-9].x
      - master
      - "[2-9][0-9].[0-9][0-9].x"
    paths:
      - "centreon/**"

env:
  base_directory: centreon
  widgets_directory: centreon/www/widgets

jobs:
  changes:
    runs-on: ubuntu-22.04
    outputs:
      has_frontend_changes: ${{ steps.filter.outputs.has_frontend_changes }}
      has_backend_changes: ${{ steps.filter.outputs.has_backend_changes }}
      has_features_changes: ${{ steps.filter.outputs.has_features_changes }}
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - uses: dorny/paths-filter@ebc4d7e9ebcb0b1eb21480bb8f43113e996ac77a # v3.0.1
        id: filter
        with:
          filters: |
            has_frontend_changes:
              - '**/*.[jt]sx?'
              - '**/www/front_src/**'
              - '**/tests/e2e/**'
              - '**/package*'
              - '**/lighthouse/**'
              - '**/tsconfig.json'
              - '**/cypress/**|**/pnpm-*'
            has_backend_changes:
              - '**/*.php'
              - '**/phpstan*.neon'
              - 'centreon/codingstyle.xml'
              - 'centreon/config/**/*.xml'
              - 'centreon/phpunit.xml'
              - 'centreon/ruleset.xml'
              - 'centreon/www/**/*.xml'
              - '**/bin/**'
              - '**/tmpl/**'
              - '**/features/**'
              - '/centreon/src/**'
              - '**/config/**'
              - '**/composer.*'
              - '**/tests/api/**'
              - '**/tests/rest_api/collections/**'
              - '**/tests/php/**'
              - '**/tests/clapi_export/**'
              - '**/www/!(front_src)/**'
              - '**/doc/API/**'
            has_features_changes:
              - '**/tests/e2e/**/*.feature'
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

  gherkin-lint:
    runs-on: ubuntu-22.04
    needs: [changes]
    if: ${{ needs.changes.outputs.has_features_changes == 'true' }}
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - uses: ./.github/actions/gherkin-lint
        with:
          features_path: centreon/tests/e2e/features

  dispatch-to-maintained-branches:
    if: ${{ github.event_name == 'schedule' && github.ref_name == 'develop' }}
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - run: |
          gh workflow run web.yml -r "dev-23.10.x" -f is_nightly=true
        shell: bash
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  get-version:
    uses: ./.github/workflows/get-version.yml
    with:
      version_file: centreon/www/install/insertBaseConf.sql

  veracode-analysis:
    needs: [get-version]
    uses: ./.github/workflows/veracode-analysis.yml
    with:
      module_directory: centreon
      module_name: centreon-web
      major_version: ${{ needs.get-version.outputs.major_version }}
      minor_version: ${{ needs.get-version.outputs.minor_version }}
      stability: ${{ needs.get-version.outputs.stability }}
    secrets:
      veracode_api_id: ""
      veracode_api_key: ""
      veracode_srcclr_token: ${{ secrets.VERACODE_SRCCLR_TOKEN }}
      jira_base_url: ${{ secrets.JIRA_BASE_URL }}
      jira_user_email: ${{ secrets.XRAY_JIRA_USER_EMAIL }}
      jira_api_token: ${{ secrets.XRAY_JIRA_TOKEN }}

  one:
    runs-on: [self-hosted, common]
    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
      - name: Dump job context
        env:
          JOB_CONTEXT: ${{ toJson(job) }}
        run: echo "$JOB_CONTEXT"
      - name: Dump steps context
        env:
          STEPS_CONTEXT: ${{ toJson(steps) }}
        run: echo "$STEPS_CONTEXT"
      - name: Dump runner context
        env:
          RUNNER_CONTEXT: ${{ toJson(runner) }}
        run: echo "$RUNNER_CONTEXT"
      - name: Dump strategy context
        env:
          STRATEGY_CONTEXT: ${{ toJson(strategy) }}
        run: echo "$STRATEGY_CONTEXT"
      - name: Dump matrix context
        env:
          MATRIX_CONTEXT: ${{ toJson(matrix) }}
        run: echo "$MATRIX_CONTEXT"

      - name: Show default environment variables
        run: |
          echo "The job_id is: $GITHUB_JOB"   # reference the default environment variables
          echo "The id of this action is: $GITHUB_ACTION"   # reference the default environment variables
          echo "The run id is: $GITHUB_RUN_ID"
          echo "The GitHub Actor's username is: $GITHUB_ACTOR"
          echo "GitHub SHA: $GITHUB_SHA"
          echo "Veracode svc var : ${{ vars.VERACODE_API_ID_SVC_EXT }}"
