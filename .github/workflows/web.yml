name: web

on:
  workflow_dispatch:
  pull_request:
    paths:
      - ".github/workflows/web.yml"
      - "centreon/**"
  push:
    branches:
      - develop
    paths:
      - ".github/workflows/web.yml"
      - "centreon/**"
    tags:
      - centreon-22.10.**

env:
  version: "22.10"
  base_directory: centreon

jobs:
  frontend-build:
    runs-on: [self-hosted, common]

    steps:
      - uses: actions/checkout@v3

      - uses: ./.github/actions/frontend-build
        with:
          base_directory: ${{ env.base_directory }}
          index_file: ${{ env.base_directory }}/www/index.html
          static_directory: ${{ env.base_directory }}/www/static
          index_cache_key: ${{ github.sha }}-${{ github.run_id }}-index
          static_cache_key: ${{ github.sha }}-${{ github.run_id }}-static

  backend-dependencies:
    runs-on: [self-hosted, common]

    steps:
      - uses: actions/checkout@v3

      - uses: ./.github/actions/backend-dependencies
        with:
          base_directory: ${{ env.base_directory }}
          cache_key: ${{ github.sha }}-${{ github.run_id }}-vendor

  frontend-lint:
    runs-on: [self-hosted, common]

    steps:
      - uses: actions/setup-node@v3
        with:
          node-version: 17

      - uses: actions/checkout@v3

      - name: Install dependencies
        run: npm ci --legacy-peer-deps
        working-directory: centreon

      - name: Lint
        run: npm run eslint -- -o checkstyle.xml -f checkstyle --quiet
        working-directory: centreon

      - name: Publish report
        if: ${{ always() }}
        uses: jwgmeligmeyling/checkstyle-github-action@master
        with:
          name: centreon-web-eslint-report
          path: centreon/checkstyle.xml

  frontend-unit-test:
    runs-on: [self-hosted, common]

    steps:
      - uses: actions/setup-node@v3
        with:
          node-version: 17

      - uses: actions/checkout@v3

      - name: Install dependencies
        run: npm ci --legacy-peer-deps
        working-directory: centreon

      - name: Unit test
        run: npm t -- --silent --reporters=jest-junit
        working-directory: centreon

      - name: Publish report
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          check_name: "centreon-web-frontend-unit-tests-report"
          comment_mode: failures
          junit_files: "centreon/junit.xml"

  backend-unit-test:
    runs-on: [self-hosted, common]

    steps:
      - uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.1
          coverage: none
        env:
          runner: self-hosted

      - name: Install dependencies
        uses: ramsey/composer-install@v2
        with:
          working-directory: centreon
          composer-options: "--optimize-autoloader"

      - name: Unit test
        run: XDEBUG_MODE=coverage composer run-script test:ci
        working-directory: centreon

      - name: Publish report
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          check_name: "centreon-web-backend-unit-tests-report"
          comment_mode: failures
          junit_files: "centreon/build/phpunit.xml"

  package-rpm:
    runs-on: [self-hosted, common]
    needs: [
      backend-dependencies,
      backend-unit-test,
      frontend-build,
      frontend-lint,
      frontend-unit-test,
    ]

    strategy:
      matrix:
        include:
          - image: packaging-web-centos7
            distrib: el7
          - image: packaging-web-alma8
            distrib: el8

    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: ./.github/actions/package
        with:
          package_extension: rpm
          frontend_index_cache_key: ${{ github.sha }}-${{ github.run_id }}-index
          frontend_index_file: ${{ env.base_directory }}/www/index.html
          frontend_static_cache_key: ${{ github.sha }}-${{ github.run_id }}-static
          frontend_static_directory: ${{ env.base_directory }}/www/static
          backend_vendor_cache_key: ${{ github.sha }}-${{ github.run_id }}-vendor
          backend_vendor_directory: ${{ env.base_directory }}/vendor
          image_name: ${{ matrix.image }}
          script_name: web-packaging-rpm
          module_name: centreon
          version: ${{ env.version }}
          cache_key: ${{ github.sha }}-${{ github.run_id }}-rpm-${{ matrix.distrib }}
          sign: true
          nexus_username: ${{ secrets.NEXUS_RPMS_REPOSITORY_USERNAME }}
          nexus_password: ${{ secrets.NEXUS_RPMS_REPOSITORY_PASSWORD }}

  package-deb:
    runs-on: [self-hosted, common]
    needs: [
      backend-dependencies,
      backend-unit-test,
      frontend-build,
      frontend-lint,
      frontend-unit-test,
    ]

    strategy:
      matrix:
        include:
          - image: packaging-web-bullseye
            distrib: bullseye

    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: 'Get minor and release version'
        uses: ./.github/actions/get-package-version
        with:
          module_name: ${{ env.module }}
        id: get_version

      - name: Login to Registry
        uses: docker/login-action@v2
        with:
          registry: docker.registry.apps.centreon.com
          username: ${{ secrets.NEXUS_RPMS_REPOSITORY_USERNAME }}
          password: ${{ secrets.NEXUS_RPMS_REPOSITORY_PASSWORD }}

      - name: Package
        uses: ./.github/actions/runner-docker
        with:
          script_name: web-packaging-deb
          image_name: ${{ matrix.image }}
          image_version: ${{ env.version }}
          params: ${{ env.version }}.${{ steps.get_version.outputs.minor_version }} ${{ steps.get_version.outputs.release }}

      - name: Cache DEB files
        uses: actions/cache@v3
        env:
          cache-name-debbuild: cache-${{ github.sha }}-${{ github.run_id }}-debbuild-web
        with:
          path: ./*.deb
          key: ${{ env.cache-name-debbuild }}-${{ matrix.distrib }}

  dockerize:
    runs-on: [self-hosted, common]
    needs: [
      package-rpm,
      package-deb
    ]

    strategy:
      matrix:
        include:
          - project: centreon-web
            distrib: centos7
            distrib_rpm: el7
            module_name: web

    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Login to Registry
        uses: docker/login-action@v2
        with:
          registry: docker.registry.apps.centreon.com
          username: ${{ secrets.NEXUS_RPMS_REPOSITORY_USERNAME }}
          password: ${{ secrets.NEXUS_RPMS_REPOSITORY_PASSWORD }}

      - name: Use cache RPM files
        uses: actions/cache@v3
        with:
          path: ./*.rpm
          key: ${{ github.sha }}-${{ github.run_id }}-rpm-${{ matrix.distrib_rpm }}

      - uses: docker/setup-buildx-action@v2

      - uses: docker/build-push-action@v3
        with:
          file: ci/docker/Dockerfile.${{ matrix.project }}-${{ matrix.distrib }}
          target: web_fresh
          context: .
          pull: true
          push: true
          tags: docker.registry.apps.centreon.com/${{ matrix.project }}-fresh-${{ matrix.distrib }}:${{ github.head_ref || github.ref_name }}

      - uses: docker/build-push-action@v3
        with:
          file: ci/docker/Dockerfile.${{ matrix.project }}-${{ matrix.distrib }}
          target: web_standard
          context: .
          pull: true
          push: true
          tags: docker.registry.apps.centreon.com/${{ matrix.project }}-${{ matrix.distrib }}:${{ github.head_ref || github.ref_name }}

      - uses: docker/build-push-action@v3
        with:
          file: ci/docker/Dockerfile.${{ matrix.project }}-${{ matrix.distrib }}
          target: web_widgets
          context: .
          pull: true
          push: true
          tags: docker.registry.apps.centreon.com/${{ matrix.project }}-widgets-${{ matrix.distrib }}:${{ github.head_ref || github.ref_name }}

  test-e2e:
    runs-on: [self-hosted, common]
    needs: [dockerize]

    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Login to Registry
        uses: docker/login-action@v2
        with:
          registry: docker.registry.apps.centreon.com
          username: ${{ secrets.NEXUS_RPMS_REPOSITORY_USERNAME }}
          password: ${{ secrets.NEXUS_RPMS_REPOSITORY_PASSWORD }}

      - name: Cypress e2e testing
        uses: ./.github/actions/cypress-e2e-testing
        with:
          image: docker.registry.apps.centreon.com/centreon-web-centos7
          image_version: ${{ github.head_ref || github.ref_name }}
          image_cypress_version: ${{ env.version }}
          module: centreon

      - name: Archive videos
        uses: actions/upload-artifact@v3
        if: ${{ failure() }}
        with:
          name: cypress-videos
          path: centreon/tests/e2e/cypress/results/video

      - name: Publish report
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          check_name: "centreon-web-frontend-e2e-tests-report"
          comment_mode: failures
          junit_files: centreon/tests/e2e/cypress-result.xml

  test-performances:
    runs-on: [self-hosted, common]
    needs: [dockerize]

    steps:
      - uses: actions/checkout@v3

      - name: Login to Registry
        uses: docker/login-action@v2
        with:
          registry: docker.registry.apps.centreon.com
          username: ${{ secrets.NEXUS_RPMS_REPOSITORY_USERNAME }}
          password: ${{ secrets.NEXUS_RPMS_REPOSITORY_PASSWORD }}

      - name: Run lighthouse
        uses: ./.github/actions/lighthouse-performance-testing
        with:
          path: "centreon/lighthouse"
          image: docker.registry.apps.centreon.com/centreon-web-centos7
          image_version: ${{ github.head_ref || github.ref_name }}
          image_lighthouse_version: ${{ env.version }}
          module: centreon

      - name: Publish report
        uses: actions/upload-artifact@v3
        with:
          name: lighthouse-report
          path: centreon/lighthouse/report/lighthouseci-index.html

  api-integration-test:
    needs: [dockerize]
    uses: ./.github/workflows/behat-test.yml
    with:
      name: api
      module_name: centreon
      image_name: centreon-web
      features_path: tests/api/features
      config_file: tests/api/behat.yml
    secrets:
      nexus_username: ${{ secrets.NEXUS_RPMS_REPOSITORY_USERNAME }}
      nexus_password: ${{ secrets.NEXUS_RPMS_REPOSITORY_PASSWORD }}
      composer_token: ${{ secrets.CENTREON_TECHNIQUE_PAT }}

  legacy-e2e-test:
    needs: [api-integration-test]
    uses: ./.github/workflows/behat-test.yml
    with:
      name: e2e
      module_name: centreon
      image_name: centreon-web
      features_path: features
    secrets:
      nexus_username: ${{ secrets.NEXUS_RPMS_REPOSITORY_USERNAME }}
      nexus_password: ${{ secrets.NEXUS_RPMS_REPOSITORY_PASSWORD }}
      composer_token: ${{ secrets.CENTREON_TECHNIQUE_PAT }}

  deliver-rpm:
    runs-on: [self-hosted, common]
    needs: [
      test-e2e,
      test-performances,
      legacy-e2e-test
    ]
    strategy:
      matrix:
        distrib: [el7, el8]

    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Delivery
        uses: ./.github/actions/rpm-delivery
        with:
          module_name: web
          distrib: ${{ matrix.distrib }}
          version: ${{ env.version }}
          nexus_username: ${{ secrets.NEXUS_RPMS_REPOSITORY_USERNAME }}
          nexus_password: ${{ secrets.NEXUS_RPMS_REPOSITORY_PASSWORD }}

  deliver-deb:
    runs-on: [self-hosted, common]
    needs: [
      test-e2e,
      test-performances,
      legacy-e2e-test
    ]
    strategy:
      matrix:
        distrib: [bullseye]

    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Delivery
        uses: ./.github/actions/deb-delivery
        with:
          module_name: web
          distrib: ${{ matrix.distrib }}
          version: ${{ env.version }}
          nexus_username: ${{ secrets.NEXUS_RPMS_REPOSITORY_USERNAME }}
          nexus_password: ${{ secrets.NEXUS_RPMS_REPOSITORY_PASSWORD }}
