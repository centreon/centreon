name: web

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

on:
  workflow_dispatch:
  pull_request:
    paths:
      - ".github/workflows/web.yml"
      - "centreon/**"
      - "!centreon/packages/**"
  push:
    branches:
      - develop
      - dev-[2-9][0-9].[0-9][0-9].x
      - master
      - "[2-9][0-9].[0-9][0-9].x"
    paths:
      - ".github/workflows/web.yml"
      - "centreon/**"
      - "!centreon/packages/**"

    tags:
      - centreon-*

env:
  base_directory: centreon

jobs:
  get-version:
    uses: ./.github/workflows/get-version.yml
    with:
      version_file: centreon/www/install/insertBaseConf.sql

  frontend-build:
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v3

      - uses: ./.github/actions/frontend-build
        with:
          base_directory: ${{ env.base_directory }}
          index_file: ${{ env.base_directory }}/www/index.html
          static_directory: ${{ env.base_directory }}/www/static
          index_cache_key: ${{ github.sha }}-${{ github.run_id }}-index
          static_cache_key: ${{ github.sha }}-${{ github.run_id }}-static

  backend-dependencies:
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v3

      - uses: ./.github/actions/backend-dependencies
        with:
          base_directory: ${{ env.base_directory }}
          cache_key: ${{ github.sha }}-${{ github.run_id }}-vendor

  translation-build:
    needs: [get-version]
    runs-on: ubuntu-22.04
    container:
      image: docker.centreon.com/translation:${{ needs.get-version.outputs.major_version }}
      credentials:
        username: ${{ secrets.REPOS_USERNAME }}
        password: ${{ secrets.REPOS_PASSWORD }}

    steps:
      - uses: actions/checkout@v3

      - run: |
          cd centreon
          find ./www/include/Administration/about -type f | xargs --delimiter='\n' sed -i -e "s/@COMMIT@/$COMMIT/g"
          mkdir -p www/locale/en_US.UTF-8/LC_MESSAGES
          php bin/centreon-translations.php en lang/fr_FR.UTF-8/LC_MESSAGES/messages.po www/locale/en_US.UTF-8/LC_MESSAGES/messages.ser
          for i in lang/* ; do
            localefull=`basename $i`
            langcode=`echo $localefull | cut -d _ -f 1`
            mkdir -p "www/locale/$localefull/LC_MESSAGES"
            msgfmt "lang/$localefull/LC_MESSAGES/messages.po" -o "www/locale/$localefull/LC_MESSAGES/messages.mo" || exit 1
            msgfmt "lang/$localefull/LC_MESSAGES/help.po" -o "www/locale/$localefull/LC_MESSAGES/help.mo" || exit 1
            php bin/centreon-translations.php "$langcode" "lang/$localefull/LC_MESSAGES/messages.po" "www/locale/$localefull/LC_MESSAGES/messages.ser"
          done
        shell: bash

      - uses: actions/cache@v3
        with:
          path: ${{ env.base_directory }}/www/locale
          key: ${{ github.sha }}-${{ github.run_id }}-translation

  frontend-lint:
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/setup-node@v3
        with:
          node-version: 17

      - uses: actions/checkout@v3

      - name: Install dependencies
        run: npm ci --legacy-peer-deps
        working-directory: centreon

      - name: Lint
        run: npm run eslint -- -o checkstyle.xml -f checkstyle --quiet
        working-directory: centreon

      - name: Publish report
        if: ${{ always() }}
        uses: jwgmeligmeyling/checkstyle-github-action@master
        with:
          name: centreon-web-eslint-report
          path: centreon/checkstyle.xml

  frontend-unit-test:
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/setup-node@v3
        with:
          node-version: 17

      - uses: actions/checkout@v3

      - name: Install dependencies
        run: npm ci --legacy-peer-deps
        working-directory: centreon

      - name: Unit test
        run: npm t -- --silent --reporters=jest-junit
        working-directory: centreon

      - name: Publish report
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          check_name: "centreon-web-frontend-unit-tests-report"
          comment_mode: failures
          junit_files: "centreon/junit.xml"

  backend-unit-test:
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.0
          coverage: none
        env:
          runner: ubuntu-22.04

      - name: Install dependencies
        uses: ramsey/composer-install@v2
        with:
          working-directory: centreon
          composer-options: "--optimize-autoloader"

      - name: Unit test
        run: XDEBUG_MODE=coverage composer run-script test:ci
        working-directory: centreon

      - name: Publish report
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          check_name: "centreon-web-backend-unit-tests-report"
          comment_mode: failures
          junit_files: "centreon/build/phpunit.xml"

  package:
    needs: [
      get-version,
      translation-build,
      backend-dependencies,
      backend-unit-test,
      frontend-build,
      frontend-lint,
      frontend-unit-test
    ]
    if: ${{ always() && !contains(needs.*.result, 'failure') && !contains(needs.*.result, 'cancelled') }}

    strategy:
      fail-fast: false
      matrix:
        distrib: [el7, el8, bullseye]
        include:
          - package_extension: rpm
            image: packaging-centos7
            distrib: el7
          - package_extension: rpm
            image: packaging-alma8
            distrib: el8
          - package_extension: deb
            image: packaging-bullseye
            distrib: bullseye

    uses: ./.github/workflows/package.yml
    with:
      base_directory: centreon
      spec_file: centreon/packaging/centreon.spectemplate
      package_extension: ${{ matrix.package_extension }}
      frontend_index_cache_key: ${{ github.sha }}-${{ github.run_id }}-index
      frontend_index_file: centreon/www/index.html
      frontend_static_cache_key: ${{ github.sha }}-${{ github.run_id }}-static
      frontend_static_directory: centreon/www/static
      backend_vendor_cache_key: ${{ github.sha }}-${{ github.run_id }}-vendor
      backend_vendor_directory: centreon/vendor
      translation_cache_key: ${{ github.sha }}-${{ github.run_id }}-translation
      translation_directory: centreon/www/locale
      image_name: ${{ matrix.image }}
      module_name: centreon
      major_version: ${{ needs.get-version.outputs.major_version }}
      minor_version: ${{ needs.get-version.outputs.minor_version }}
      release: ${{ needs.get-version.outputs.release }}
      cache_key: ${{ github.sha }}-${{ github.run_id }}-${{ matrix.package_extension }}-${{ matrix.distrib }}
    secrets:
      artifactory_username: ${{ secrets.NEXUS_RPMS_REPOSITORY_USERNAME }}
      artifactory_password: ${{ secrets.NEXUS_RPMS_REPOSITORY_PASSWORD }}

  dockerize:
    runs-on: ubuntu-22.04
    needs: [package]

    strategy:
      matrix:
        include:
          - project: centreon-web
            distrib: centos7
            distrib_rpm: el7
            module_name: web

    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Login to proxy registry
        uses: docker/login-action@v2
        with:
          registry: docker-proxy.centreon.com
          username: ${{ secrets.NEXUS_RPMS_REPOSITORY_USERNAME }}
          password: ${{ secrets.NEXUS_RPMS_REPOSITORY_PASSWORD }}

      - name: Login to Registry
        uses: docker/login-action@v2
        with:
          registry: docker.centreon.com
          username: ${{ secrets.NEXUS_RPMS_REPOSITORY_USERNAME }}
          password: ${{ secrets.NEXUS_RPMS_REPOSITORY_PASSWORD }}

      - name: Use cache RPM files
        uses: actions/cache@v3
        with:
          path: ./*.rpm
          key: ${{ github.sha }}-${{ github.run_id }}-rpm-${{ matrix.distrib_rpm }}

      - uses: docker/setup-buildx-action@v2

      - uses: docker/build-push-action@v3
        with:
          file: .github/docker/Dockerfile.${{ matrix.project }}-${{ matrix.distrib }}
          target: web_fresh
          context: .
          pull: true
          push: true
          tags: docker.centreon.com/${{ matrix.project }}-fresh-${{ matrix.distrib }}:${{ github.head_ref || github.ref_name }}

      - uses: docker/build-push-action@v3
        with:
          file: .github/docker/Dockerfile.${{ matrix.project }}-${{ matrix.distrib }}
          target: web_standard
          context: .
          pull: true
          push: true
          tags: docker.centreon.com/${{ matrix.project }}-${{ matrix.distrib }}:${{ github.head_ref || github.ref_name }}

      - uses: docker/build-push-action@v3
        with:
          file: .github/docker/Dockerfile.${{ matrix.project }}-${{ matrix.distrib }}
          target: web_widgets
          context: .
          pull: true
          push: true
          tags: docker.centreon.com/${{ matrix.project }}-widgets-${{ matrix.distrib }}:${{ github.head_ref || github.ref_name }}

  api-integration-test:
    needs: [dockerize]
    uses: ./.github/workflows/behat-test.yml
    with:
      name: api
      module_name: centreon
      image_name: centreon-web
      features_path: tests/api/features
      config_file: tests/api/behat.yml
    secrets:
      nexus_username: ${{ secrets.NEXUS_RPMS_REPOSITORY_USERNAME }}
      nexus_password: ${{ secrets.NEXUS_RPMS_REPOSITORY_PASSWORD }}
      composer_token: ${{ secrets.CENTREON_TECHNIQUE_PAT }}

  legacy-e2e-test:
    needs: [dockerize]
    uses: ./.github/workflows/behat-test.yml
    with:
      name: e2e
      module_name: centreon
      image_name: centreon-web
      features_path: features
    secrets:
      nexus_username: ${{ secrets.NEXUS_RPMS_REPOSITORY_USERNAME }}
      nexus_password: ${{ secrets.NEXUS_RPMS_REPOSITORY_PASSWORD }}
      composer_token: ${{ secrets.CENTREON_TECHNIQUE_PAT }}

  e2e-test:
    runs-on: ubuntu-22.04
    needs: [get-version, dockerize]

    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Login to proxy registry
        uses: docker/login-action@v2
        with:
          registry: docker-proxy.centreon.com
          username: ${{ secrets.NEXUS_RPMS_REPOSITORY_USERNAME }}
          password: ${{ secrets.NEXUS_RPMS_REPOSITORY_PASSWORD }}

      - name: Login to Registry
        uses: docker/login-action@v2
        with:
          registry: docker.centreon.com
          username: ${{ secrets.NEXUS_RPMS_REPOSITORY_USERNAME }}
          password: ${{ secrets.NEXUS_RPMS_REPOSITORY_PASSWORD }}

      - name: Cypress e2e testing
        uses: ./.github/actions/cypress-e2e-testing
        with:
          image: docker.centreon.com/centreon-web-centos7
          image_version: ${{ github.head_ref || github.ref_name }}
          image_cypress_version: ${{ needs.get-version.outputs.major_version }}
          module: centreon

      - name: Archive videos
        uses: actions/upload-artifact@v3
        if: ${{ failure() }}
        with:
          name: cypress-videos
          path: centreon/tests/e2e/cypress/results/videos

      - name: Publish report
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          check_name: "centreon-web-frontend-e2e-tests-report"
          comment_mode: failures
          junit_files: centreon/tests/e2e/cypress-result.xml

  performances-test:
    runs-on: ubuntu-22.04
    needs: [get-version, dockerize]

    steps:
      - uses: actions/checkout@v3

      - name: Login to proxy registry
        uses: docker/login-action@v2
        with:
          registry: docker-proxy.centreon.com
          username: ${{ secrets.NEXUS_RPMS_REPOSITORY_USERNAME }}
          password: ${{ secrets.NEXUS_RPMS_REPOSITORY_PASSWORD }}

      - name: Login to Registry
        uses: docker/login-action@v2
        with:
          registry: docker.centreon.com
          username: ${{ secrets.NEXUS_RPMS_REPOSITORY_USERNAME }}
          password: ${{ secrets.NEXUS_RPMS_REPOSITORY_PASSWORD }}

      - name: Run lighthouse
        uses: ./.github/actions/lighthouse-performance-testing
        with:
          path: "centreon/lighthouse"
          image: docker.centreon.com/centreon-web-centos7
          image_version: ${{ github.head_ref || github.ref_name }}
          image_lighthouse_version: ${{ needs.get-version.outputs.major_version }}
          module: centreon

      - name: Publish report
        uses: actions/upload-artifact@v3
        with:
          name: lighthouse-report
          path: centreon/lighthouse/report/lighthouseci-index.html

  deliver-rpm:
    runs-on: [self-hosted, common]
    needs: [get-version, api-integration-test, legacy-e2e-test, e2e-test, performances-test]
    if: ${{ contains(fromJson('["stable", "testing", "unstable"]'), needs.get-version.outputs.stability) }}
    strategy:
      matrix:
        distrib: [el7, el8]

    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Delivery
        uses: ./.github/actions/rpm-delivery
        with:
          module_name: web
          repository_name: standard
          distrib: ${{ matrix.distrib }}
          version: ${{ needs.get-version.outputs.major_version }}
          minor_version: ${{ needs.get-version.outputs.minor_version }}
          release: ${{ needs.get-version.outputs.release }}
          nexus_username: ${{ secrets.ARTI_USER }}
          nexus_password: ${{ secrets.ARTI_PASSWD }}
          cache_key: ${{ github.sha }}-${{ github.run_id }}-rpm-${{ matrix.distrib }}
          update_repo_path: ${{ secrets.UPDATE_REPO_PATH }}
          cloudfront_id: ${{ secrets.CLOUDFRONT_ID }}
          yum_repo_address: ${{ secrets.YUM_REPO_ADDRESS }}
          yum_repo_key: ${{ secrets.YUM_REPO_KEY }}
          stability: ${{ needs.get-version.outputs.stability }}

  deliver-deb:
    runs-on: [self-hosted, common]
    needs: [get-version, api-integration-test, legacy-e2e-test, e2e-test, performances-test]
    if: ${{ contains(fromJson('["stable", "testing", "unstable"]'), needs.get-version.outputs.stability) }}
    strategy:
      matrix:
        distrib: [bullseye]

    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Delivery
        uses: ./.github/actions/deb-delivery
        with:
          module_name: web
          distrib: ${{ matrix.distrib }}
          version: ${{ needs.get-version.outputs.major_version }}
          nexus_username: ${{ secrets.NEXUS_USER }}
          nexus_password: ${{ secrets.NEXUS_PASSWD }}
          cache_key: ${{ github.sha }}-${{ github.run_id }}-deb-${{ matrix.distrib }}
          stability: ${{ needs.get-version.outputs.stability }}
