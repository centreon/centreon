name: web

on:
  workflow_dispatch:
  pull_request:
    paths:
      - ".github/workflows/web.yml"
      - "centreon/**"
  push:
    branches:
      - develop
    paths:
      - ".github/workflows/web.yml"
      - "centreon/**"
    tags:
      - centreon-22.10.**

env:
  version: "22.10"
  frontend_directory: ./centreon/www/front_src/src


jobs:
  centreon-web-backend-lint-phpcs:
    runs-on: ubuntu-22.04
    if: ${{ github.event_name != 'workflow_dispatch' }}

    steps:
      - uses: actions/checkout@v3

      - name: Get changed files
        id: files
        uses: jitterbit/get-changed-files@v1

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.0
          coverage: none
          tools: cs2pr

      - run: composer install
        working-directory: centreon

      - name: Lint
        run: |
          ./centreon/vendor/bin/phpcs \
            --extensions=php \
            --standard=./centreon/ruleset.xml \
            --report=checkstyle \
            --report-file=./checkstyle-phpcs.xml \
            ${{ steps.files.outputs.added }} ${{ steps.files.outputs.modified }}

      - name: Show PHPCS results in PR
        if: ${{ always() }}
        run: cs2pr checkstyle-phpcs.xml

      - name: Publish report
        if: ${{ always() }}
        uses: jwgmeligmeyling/checkstyle-github-action@master
        with:
          name: centreon-phpcs-report
          path: checkstyle-phpcs.xml

  centreon-web-backend-lint-phpstan:
    runs-on: ubuntu-22.04
    if: ${{ github.event_name != 'workflow_dispatch' }}

    steps:
      - uses: actions/checkout@v3

      - name: Get changed files
        id: files
        uses: jitterbit/get-changed-files@v1

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.0
          coverage: none
          tools: cs2pr

      - run: composer install
        working-directory: centreon

      - name: Lint
        run: |
          ./centreon/vendor/bin/phpstan \
            analyse -c ./centreon/phpstan.neon \
            --level 6 \
            --memory-limit=512M \
            --error-format=checkstyle \
            --no-interaction \
            --no-progress ${{ steps.files.outputs.added }} ${{ steps.files.outputs.modified }} \
            > checkstyle-phpstan.xml

      - name: Show PHPStan results in PR
        if: ${{ always() }}
        run: cs2pr ./checkstyle-phpstan.xml

      - name: Publish report
        if: ${{ always() }}
        uses: jwgmeligmeyling/checkstyle-github-action@master
        with:
          name: centreon-phpstan-report
          path: checkstyle-phpstan.xml

  centreon-web-frontend-lint:
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/setup-node@v3
        with:
          node-version: 17

      - uses: actions/checkout@v3

      - name: Install dependencies
        run: npm ci --legacy-peer-deps
        working-directory: centreon

      - name: Lint
        run: npm run eslint -- -o checkstyle.xml -f checkstyle --quiet
        working-directory: centreon

      - name: Publish report
        if: ${{ always() }}
        uses: jwgmeligmeyling/checkstyle-github-action@master
        with:
          name: centreon-web-eslint-report
          path: centreon/checkstyle.xml

  centreon-web-frontend-unit-test:
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/setup-node@v3
        with:
          node-version: 17

      - uses: actions/checkout@v3

      - name: Install dependencies
        run: npm ci --legacy-peer-deps
        working-directory: centreon

      - name: Unit test
        run: npm t -- --silent --reporters=jest-junit
        working-directory: centreon

      - name: Publish report
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          check_name: "centreon-web-frontend-unit-tests-report"
          comment_mode: failures
          junit_files: "centreon/junit.xml"

  centreon-web-backend-unit-test:
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.0
          coverage: none

      - name: Install dependencies
        run: composer install --optimize-autoloader
        working-directory: centreon

      - name: Unit test
        run: XDEBUG_MODE=coverage composer run-script test:ci
        working-directory: centreon

      - name: Publish report
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          check_name: "centreon-web-backend-unit-tests-report"
          comment_mode: failures
          junit_files: "centreon/build/phpunit.xml"

  centreon-web-package-rpm:
    runs-on: common
    needs:
      [
        centreon-web-backend-lint-phpcs,
        centreon-web-backend-lint-phpstan,
        centreon-web-backend-unit-test,
        centreon-web-frontend-lint,
        centreon-web-frontend-unit-test,
      ]

    strategy:
      matrix:
        include:
          - image: packaging-web-centos7
            distrib: el7
          - image: packaging-web-alma8
            distrib: el8

    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: "Get minor and release version"
        uses: ./.github/actions/get-package-version
        with:
          module_name: ${{ env.module }}
        id: get_version

      - name: Package
        uses: ./.github/actions/runner-docker
        with:
          script_name: web-packaging-rpm
          image_name: ${{ matrix.image }}
          image_version: ${{ env.version }}
          params: ${{ env.version }}.${{ steps.get_version.outputs.minor_version }} ${{ steps.get_version.outputs.release }}

      - name: Sign
        uses: ./.github/actions/runner-docker
        with:
          script_name: rpm-signing
          image_name: rpm-signing
          image_version: ubuntu

      - name: Cache RPM files
        uses: actions/cache@v3
        env:
          cache-name-rpmbuild: cache-${{ github.sha }}-${{ github.run_id }}-rpmbuild-web
        with:
          path: ./*.rpm
          key: ${{ env.cache-name-rpmbuild }}-${{ matrix.distrib }}
  
  centreon-web-package-deb:
    runs-on: common
    needs:
      [
        centreon-web-backend-lint-phpcs,
        centreon-web-backend-lint-phpstan,
        centreon-web-backend-unit-test,
        centreon-web-frontend-lint,
        centreon-web-frontend-unit-test,
      ]
    
    strategy:
      matrix:
        include:
          - image: packaging-web-bullseye
            distrib: bullseye

    steps: 
      - name: Checkout sources
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: 'Get minor and release version'
        uses: ./.github/actions/get-package-version
        with:
          module_name: ${{ env.module }}
        id: get_version

      - name: Package
        uses: ./.github/actions/runner-docker
        with:
          script_name: web-packaging-deb
          image_name: ${{ matrix.image }}
          image_version: ${{ env.version }}
          params: ${{ env.version }}.${{ steps.get_version.outputs.minor_version }} ${{ steps.get_version.outputs.release }}

      - name: Cache DEB files
        uses: actions/cache@v3
        env:
          cache-name-debbuild: cache-${{ github.sha }}-${{ github.run_id }}-debbuild-web
        with:
          path: ./*.deb
          key: ${{ env.cache-name-debbuild }}-${{ matrix.distrib }}

  centreon-web-dockerize:
    runs-on: common
    needs: [centreon-web-package-rpm, centreon-web-package-deb]

    strategy:
      matrix:
        include:
          - project: run-centreon-open-source
            distrib: centos7
            distrib_rpm: el7
            module_name: web

    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Login to Registry
        uses: docker/login-action@v2
        with:
          registry: docker.registry.apps.centreon.com
          username: ${{ secrets.NEXUS_RPMS_REPOSITORY_USERNAME }}
          password: ${{ secrets.NEXUS_RPMS_REPOSITORY_PASSWORD }}

      - name: build docker run
        uses: ./.github/actions/docker-builder-run
        with:
          distrib: ${{ matrix.distrib }}
          project: ${{ matrix.project }}
          distrib_rpm: ${{ matrix.distrib_rpm }}
          module_name: ${{ matrix.module_name }}

  centreon-web-test-e2e:
    runs-on: common
    needs: [centreon-web-dockerize]

    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Cypress e2e testing
        uses: ./.github/actions/cypress-e2e-testing
        with:
          image: docker.registry.apps.centreon.com/run-centreon-open-source-centos7
          image_version: ${{ github.head_ref || github.ref_name }}
          image_cypress_version: ${{ env.version }}
          module: centreon

      - name: Archive videos
        uses: actions/upload-artifact@v3
        if: ${{ failure() }}
        with:
          name: cypress-videos
          path: centreon/tests/e2e/cypress/results/video

      - name: Publish report
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          check_name: "centreon-web-frontend-e2e-tests-report"
          comment_mode: failures
          junit_files: centreon/tests/e2e/cypress-result.xml

  centreon-web-deliver-rpm:
    runs-on: common
    needs: [centreon-web-test-e2e]

    strategy:
      matrix:
        include:
          - module_name: web
            distrib: el7

          - module_name: web
            distrib: el8

    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Delivery
        uses: ./.github/actions/rpm-delivery
        with:
          module_name: ${{ matrix.module_name }}
          distrib: ${{ matrix.distrib }}
          version: ${{ env.version }}
          nexus_username: ${{ secrets.NEXUS_RPMS_REPOSITORY_USERNAME }}
          nexus_password: ${{ secrets.NEXUS_RPMS_REPOSITORY_PASSWORD }}

  centreon-web-deliver-deb:
    needs: [centreon-web-test-e2e]
    runs-on: common
    strategy:
      matrix:
        include:
          - module_name: web
            distrib: bullseye
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Delivery
        uses: ./.github/actions/deb-delivery
        with:
          module_name: ${{ matrix.module_name }}
          distrib: ${{ matrix.distrib }}
          version: ${{ env.version }}
          nexus_username: ${{ secrets.NEXUS_RPMS_REPOSITORY_USERNAME }}
          nexus_password: ${{ secrets.NEXUS_RPMS_REPOSITORY_PASSWORD }}

  centreon-web-test-performances:
    runs-on: common
    needs: [centreon-web-dockerize]

    steps:
      - uses: actions/checkout@v3

      - name: Run lighthouse
        uses: ./.github/actions/lighthouse-performance-testing
        with:
          path: "centreon/lighthouse"
          image: docker.registry.apps.centreon.com/run-centreon-open-source-centos7
          image_version: ${{ github.head_ref || github.ref_name }}
          image_lighthouse_version: ${{ env.version }}
          module: centreon

      - name: Publish report
        uses: actions/upload-artifact@v3
        with:
          name: lighthouse-report
          path: centreon/lighthouse/report/lighthouseci-index.html
