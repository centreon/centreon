# Veracode scans
on:
  workflow_call:
    inputs:
      module_directory:
        required: true
        type: string
      module_name:
        required: true
        type: string
      major_version:
        required: true
        type: string
      minor_version:
        required: true
        type: string
      stability:
        required: true
        type: string
      is_perl_project:
        required: false
        type: boolean

    secrets:
      veracode_api_id:
        required: true
      veracode_api_key:
        required: true
      veracode_srcclr_token:
        required: true
      jira_base_url:
        required: true
      jira_user_email:
        required: true
      jira_api_token:
        required: true

jobs:
  build:
    name: Binary preparation
    runs-on: ubuntu-22.04
    outputs:
      fail_build: ${{ steps.routing-mode.outputs.fail_build }}
      development_stage: ${{ steps.routing-mode.outputs.development_stage }}
      display_summary: ${{ steps.routing-mode.outputs.display_summary }}

    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - name: Set routing mode
        id: routing-mode
        run: |
          CHECK_BRANCH=`echo "${{ github.ref_name }}" | cut -d'/' -f2`
          if [[ $CHECK_BRANCH != "merge" && '${{ github.event_name }}' != 'pull_request' && '${{ inputs.stability }}' == 'stable' ]]; then
            # e.g master
            FAIL_BUILD="false"
            DEVELOPMENT_STAGE="Release"
            DISPLAY_SUMMARY="false"
          elif [[ $CHECK_BRANCH != "merge" && '${{ github.event_name }}' != 'pull_request' && '${{ inputs.stability }}' == 'unstable' ]]; then
            # e.g develop
            FAIL_BUILD="${{ vars.VERACODE_QUALITY_GATE }}"
            DEVELOPMENT_STAGE="Testing"
            DISPLAY_SUMMARY="false"
          elif [[ $CHECK_BRANCH == "merge" && -n '${{ github.head_ref }}' && '${{ github.head_ref }}' =~ ^release-[2-9][0-9].[0-9][0-9]-next ]]; then
            # e.g release-23.04-next
            FAIL_BUILD="false"
            DEVELOPMENT_STAGE="Development"
            DISPLAY_SUMMARY="false"
          else
            FAIL_BUILD="${{ vars.VERACODE_QUALITY_GATE }}"
            DEVELOPMENT_STAGE="Development"
            DISPLAY_SUMMARY="true"
          fi

          echo "fail_build=$FAIL_BUILD" >> $GITHUB_OUTPUT
          echo "development_stage=$DEVELOPMENT_STAGE" >> $GITHUB_OUTPUT
          echo "display_summary=$DISPLAY_SUMMARY" >> $GITHUB_OUTPUT
          cat $GITHUB_OUTPUT

      - name: Create jira ticket
        # In case of QG failure, a ticket is created
        uses: ./.github/actions/veracode_create_jira_ticket
        with:
          jira_base_url: ${{ secrets.jira_base_url }}
          jira_user_email: ${{ secrets.jira_user_email }}
          jira_api_token: ${{ secrets.jira_api_token }}
          module_name: ${{ inputs.module_name }}
