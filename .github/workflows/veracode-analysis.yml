# Veracode scans
on:
  workflow_call:
    inputs:
      module_directory:
        required: true
        type: string
      module_name:
        required: true
        type: string
      major_version:
        required: true
        type: string
      minor_version:
        required: true
        type: string
      stability:
        required: true
        type: string

    secrets:
      veracode_api_id:
        required: true
      veracode_api_key:
        required: true
      veracode_srcclr_token:
        required: true
      jira_base_url:
        required: true
      jira_user_email:
        required: true
      jira_api_token:
        required: true

jobs:
  build:
    name: Binary preparation
    runs-on: ubuntu-22.04
    outputs:
      fail_build: ${{ steps.routing-mode.outputs.fail_build }}
      development_stage: ${{ steps.routing-mode.outputs.development_stage }}
      display_summary: ${{ steps.routing-mode.outputs.display_summary }}
      enable_qg: ${{ steps.routing-mode.outputs.enable_qg }}
      skip_analysis: ${{ steps.routing-mode.outputs.skip_analysis }}

    steps:
      - name: Set routing mode
        id: routing-mode
        run: |
          ENABLE_QG="true"
          if [[ "${{ vars.VERACODE_QUALITY_GATE }}" == "false" ]] || [[ -n "${{ vars.VERACODE_EXCEPTION_ON_PR }}" && "${{ vars.VERACODE_EXCEPTION_ON_PR }}" == "${{ github.event.pull_request.number }}" ]]; then
            ENABLE_QG="false"
          fi

          CHECK_BRANCH=`echo "${{ github.ref_name }}" | cut -d'/' -f2`
          if [[ $CHECK_BRANCH != "merge" && '${{ github.event_name }}' != 'pull_request' && '${{ inputs.stability }}' == 'stable' ]]; then
            # e.g master
            FAIL_BUILD="false"
            DEVELOPMENT_STAGE="Release"
            DISPLAY_SUMMARY="false"
          elif [[ $CHECK_BRANCH != "merge" && '${{ github.event_name }}' != 'pull_request' && '${{ inputs.stability }}' == 'unstable' ]]; then
            # e.g develop
            FAIL_BUILD="$ENABLE_QG"
            DEVELOPMENT_STAGE="Testing"
            DISPLAY_SUMMARY="false"
          elif [[ $CHECK_BRANCH == "merge" && -n '${{ github.head_ref }}' && '${{ github.head_ref }}' =~ ^release-[2-9][0-9].[0-9][0-9]-next ]]; then
            # e.g release-23.04-next
            FAIL_BUILD="false"
            DEVELOPMENT_STAGE="Development"
            DISPLAY_SUMMARY="false"
          else
            FAIL_BUILD="$ENABLE_QG"
            DEVELOPMENT_STAGE="Development"
            DISPLAY_SUMMARY="$ENABLE_QG"
          fi

          # skip analysis of draft PR and analysis on development branches using workflow dispatch
          SKIP_ANALYSIS="true"
          if [[ "${{ github.event_name }}" == "pull_request" && -n "${{ github.event.pull_request.number }}" && -n "${{ github.event.pull_request.draft }}" && "${{ github.event.pull_request.draft }}" == "false" ]] || [[ "$DEVELOPMENT_STAGE" != "Development" ]]; then
            SKIP_ANALYSIS="false"
          fi

          echo "fail_build=$FAIL_BUILD" >> $GITHUB_OUTPUT
          echo "development_stage=$DEVELOPMENT_STAGE" >> $GITHUB_OUTPUT
          echo "display_summary=$DISPLAY_SUMMARY" >> $GITHUB_OUTPUT
          echo "enable_qg=$ENABLE_QG" >> $GITHUB_OUTPUT
          echo "skip_analysis=$SKIP_ANALYSIS" >> $GITHUB_OUTPUT
          cat $GITHUB_OUTPUT

      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        if: steps.routing-mode.outputs.skip_analysis == 'false'

      - name: Generate binary file
        if: steps.routing-mode.outputs.skip_analysis == 'false'
        uses: ./.github/actions/veracode-generate-binary
        with:
          module_directory: "${{ inputs.module_directory }}"
          cache_key: "${{ inputs.module_name }}-${{ github.sha }}-${{ github.run_id }}-veracode-binary"

  pipeline-scan:
    needs: [build]
    name: Run a pipeline scan
    if: needs.build.outputs.skip_analysis == 'false'
    runs-on: [self-hosted, common]

    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - name: Create jira ticket
        # In case of QG failure, a ticket must be created
        #if: needs.build.outputs.enable_qg == 'false' || ( needs.build.outputs.development_stage == 'Development' && failure() )
        uses: ./.github/actions/veracode-create-jira-ticket
        with:
          jira_base_url: ${{ secrets.jira_base_url }}
          jira_user_email: ${{ secrets.jira_user_email }}
          jira_api_token: ${{ secrets.jira_api_token }}
          module_name: ${{ inputs.module_name }}
