name: compare-runner

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

on:
  pull_request:

jobs:
  test-pull:

    strategy:
      fail-fast: false
      matrix:
        runner_type: ["ubuntu-22.04", "common"]

    runs-on: ${{ matrix.runner_type }}

    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Login to Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ vars.DOCKER_INTERNAL_REGISTRY_URL }}
          username: ${{ secrets.DOCKER_REGISTRY_ID }}
          password: ${{ secrets.DOCKER_REGISTRY_PASSWD }}

      - uses: actions/setup-node@v3
        with:
          node-version: 18

      # - name: speedtest
      #   run: |
      #     npm install --global fast-cli
      #     fast -u
      #   shell: bash

      - name: docker version
        run: |
          set -x

          repo_url="https://download.docker.com/linux/ubuntu"
          gpg_key="/usr/share/keyrings/docker.gpg"
          repo_path="/etc/apt/sources.list.d/docker.list"
          sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o $gpg_key
          sudo echo "deb [arch=amd64 signed-by=$gpg_key] $repo_url $(lsb_release -cs) stable" | sudo tee $repo_path

          ls /etc/apt/sources.list.d

          docker -v

          sudo apt-get update
          sudo apt-get install -y --no-install-recommends docker-ce docker-ce-cli containerd.io docker-buildx-plugin
          #sudo systemctl restart docker.service

          docker -v

          get_github_package_download_url() {
            local REPO_ORG=$1
            local FILTER=$2
            local VERSION=$3
            local SEARCH_IN_COUNT="100"

            json=$(curl -fsSL "https://api.github.com/repos/${REPO_ORG}/releases?per_page=${SEARCH_IN_COUNT}")

            if [ -n "$VERSION" ]; then
                tagName=$(echo $json | jq -r '.[] | select(.prerelease==false).tag_name' | sort --unique --version-sort | egrep -v ".*-[a-z]|beta" | egrep "\w*${VERSION}" | tail -1)
            else
                tagName=$(echo $json | jq -r '.[] | select((.prerelease==false) and (.assets | length > 0)).tag_name' | sort --unique --version-sort | egrep -v ".*-[a-z]|beta" | tail -1)
            fi

            downloadUrl=$(echo $json | jq -r ".[] | select(.tag_name==\"${tagName}\").assets[].browser_download_url | select(${FILTER})" | head -n 1)
            if [ -z "$downloadUrl" ]; then
                echo "Failed to parse a download url for the '${tagName}' tag using '${FILTER}' filter"
                exit 1
            fi
            echo $downloadUrl
          }

          docker-compose -v

          # Install docker compose v2 from releases
          URL=$(get_github_package_download_url "docker/compose" "contains(\"compose-linux-x86_64\")")
          curl -fsSL $URL -o /usr/libexec/docker/cli-plugins/docker-compose
          chmod +x /usr/libexec/docker/cli-plugins/docker-compose

          docker-compose -v
        shell: bash

      - name: network settings
        run: |
          sudo cat /etc/resolv.conf
          sudo cat /etc/hosts
          sudo cat /etc/group
          sudo ip addr
        shell: bash

      - name: Pull keycloak image
        run: docker pull docker.centreon.com/centreon/keycloak:23.10
        shell: bash

      # - name: speedtest
      #   run: fast -u
      #   shell: bash

      - name: traceroute
        run: |
          sudo apt-get update
          sudo apt-get install -y traceroute
          sudo traceroute docker.centreon.com
        shell: bash
