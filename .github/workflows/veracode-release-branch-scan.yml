name: Veracode scan on release and hotfix branches

on:
  push:
    branches:
      - AT-94-pipeline-scan
  pull_request:
    branches:
      - hotfix-*
      - release-*

env:
  MODULE_DIRECTORY: centreon-gorgone
  MODULE_NAME: centreon-gorgone
  BRANCH_NAME: "centreon_${{ github.head_ref || github.ref_name }}"
  HARD_MAJOR_VERSION: 23.04
  HARD_MINOR_VERSION: 1
  CRITICALITY: "Very Low"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Generate binary
        uses: ./.github/actions/veracode-generate-archive
        with:
          module_directory: ${{ env.MODULE_DIRECTORY }}
          module_name: ${{ env.MODULE_NAME }}
          major_version: ${{ env.HARD_MAJOR_VERSION }}
          minor_version: ${{ env.HARD_MINOR_VERSION }}
          compile_mvn: "no"
          exclusion_file: "TODO"

  sandbox-scan:
    runs-on: [self-hosted, veracode]
    needs: [build]
    steps:
      - name: Get current time
        run: echo "$(date +'%Y-%m-%d %H:%M:%S')"

      - name: get build binary
        uses: actions/download-artifact@v3
        with:
          name: "${{ env.MODULE_NAME }}-${{ env.HARD_MAJOR_VERSION }}.${{ env.HARD_MINOR_VERSION }}"
          # TODO: get target branch name to distinguish baseline from dev-xx.xx and xx.xx

      - name: Get current time
        run: echo "$(date +'%Y-%m-%d %H:%M:%S')"

      - name: DEBUG - Check location
        run: ls -la

      - name: DEBUG - Github head ref
        run: echo ${{ github.head_ref }}

      - name: DEBUG - Github ref Name
        run: echo ${{ github.ref_name }}

      - name: DEBUG - Github base ref
        run: echo ${{ github.base_ref }}

      - name: DEBUG - Hello world
        run: echo Hello world from $GITHUB_BASE_REF

      - name: Veracode upload and run a Sandbox scan
        uses: veracode/veracode-uploadandscan-action@master
        id: upload_and_scan
        with:
          appname: "centreon/${{ env.MODULE_NAME }}_GHA"
          createprofile: true
          filepath: "${{ env.MODULE_NAME }}-${{ env.HARD_MAJOR_VERSION }}.${{ env.HARD_MINOR_VERSION }}.zip"
          version: "${{ env.HARD_MAJOR_VERSION }}.${{ env.HARD_MINOR_VERSION }}"
          #version: "${{ needs.get-version.outputs.major_version }}.${{ needs.get-version.outputs.minor_version }}"
          vid: ${{ secrets.VERACODE_API_ID }}
          vkey: ${{ secrets.VERACODE_API_KEY }}
          createsandbox: true
          sandboxname: "${{ env.BRANCH_NAME }}"
          scantimeout: 60
          includenewmodules: true
          scanallnonfataltoplevelmodules: true
          deleteincompletescan: 1
          criticality: "${{ env.CRITICALITY }}"

      - name: DEBUG - Check location
        run: ls -la

      - name: Get current time
        run: echo "$(date +'%Y-%m-%d %H:%M:%S')"

# TODO: to study : usefulness to promote a sandbox scan
#  veracode-sandbox-task:
#    needs: build
#    name: Promote a scan from sandbox
#    runs-on: ubuntu-latest
#    if: ${{ github.ref_name == 'develop' || github.ref_name == 'master' }}
#
#    steps:
#      - name: Promote Scan on Approval
#        env:
#          VERACODE_API_ID: ${{ secrets.VERACODE_API_ID }}
#          VERACODE_API_SECRET: ${{ secrets.VERACODE_API_KEY }}
#        uses: lerer/veracode-sandboxes-helper@v1.0.1
#        with:
#          activity: "promote-latest-scan"
#          appname: "sc979/centreon"
#          sandbox-name: "${{ github.event.pull_request.base.repo.name }}-${{ github.ref_name }}"
#          delete-on-promote: true # Optional: also Deleting the Sandbox
