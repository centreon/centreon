# Checkmarx scans
name: Checkmarx scans
on:
  workflow_call:
    inputs:
      module_name:
        required: true
        type: string
      module_directory:
        required: false
        type: string

    secrets:
      base_uri:
        required: true
      cx_tenant:
        required: true
      cx_client_id:
        required: true
      cx_client_secret:
        required: true

jobs:
  build:
    name: Binary preparation
    runs-on: ubuntu-24.04
    outputs:
      enable_qg: ${{ steps.routing-mode.outputs.enable_qg }}

    steps:
      - name: Set routing mode
        id: routing-mode
        run: |
          # Quality gate settings
          ENABLE_QG="true"
          echo "enable_qg=$ENABLE_QG" >> $GITHUB_OUTPUT

          # TODO to absorb from a flat file
          # FILE_FILTER="!**/test*/**,!**/features/**"

          # TODO to disable on stable branches
          # THRESHOLD="--threshold 'sast-critical=1;sast-high=1"

  pipeline-scan:
    needs: [build]
    name: Run a pipeline scan
    runs-on: ubuntu-24.04
    if: needs.build.outputs.enable_qg == 'true'

    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - name: Checkmarx One CLI Action
        uses: checkmarx/ast-github-action@ef93013c95adc60160bc22060875e90800d3ecfc # v.2.3.19
        with:
          project_name: ${{ inputs.module_name }}
          base_uri: ${{ secrets.base_uri }}
          cx_tenant: ${{ secrets.cx_tenant }}
          cx_client_id: ${{ secrets.cx_client_id }}
          cx_client_secret: ${{ secrets.cx_client_secret }}
          source_dir: "./${{ inputs.module_directory || inputs.module_name }}"
          additional_params: --file-filter "!**/doc/**" --scan-types "sast,sca,api-security"
