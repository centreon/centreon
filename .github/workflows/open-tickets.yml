name: open-tickets

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

on:
  workflow_dispatch:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
      - ready_for_review
    paths:
      - ".version"
      - ".version.centreon-open-tickets"
      - "centreon-open-tickets/**"
  push:
    branches:
      - develop
      - dev-[2-9][0-9].[0-9][0-9].x
      - master
      - "[2-9][0-9].[0-9][0-9].x"
    paths:
      - ".version"
      - ".version.centreon-open-tickets"
      - "centreon-open-tickets/**"

env:
  module: open-tickets

jobs:
  get-environment:
    uses: ./.github/workflows/get-environment.yml
    with:
      version_file: centreon-open-tickets/www/modules/centreon-open-tickets/conf.php

  check-version-consistency:
    runs-on: ubuntu-24.04
    needs: [get-environment]
    if: |
      needs.get-environment.outputs.skip_workflow == 'false' &&
      needs.get-environment.outputs.stability == 'testing'
    env:
      version: ${{ needs.get-environment.outputs.major_version }}.${{ needs.get-environment.outputs.minor_version }}
      version_file: .version.centreon-open-tickets
      configuration_file: centreon-open-tickets/www/modules/centreon-open-tickets/conf.php
      widget_file: centreon-open-tickets/widgets/open-tickets/configs.xml
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Check ${{ env.version_file }}
        uses: ./.github/actions/check-version-consistency
        with:
          file: ${{ env.version_file }}
          version: ${{ env.version }}

      - name: Check ${{ env.configuration_file }}
        uses: ./.github/actions/check-version-consistency
        with:
          file: ${{ env.configuration_file }}
          version: ${{ env.version }}

      - name: Check ${{ env.widget_file }}
        uses: ./.github/actions/check-version-consistency
        with:
          file: ${{ env.widget_file }}
          version: ${{ env.version }}

  backend-lint:
    runs-on: ubuntu-24.04
    needs: [get-environment]
    if: |
      needs.get-environment.outputs.skip_workflow == 'false' &&
      needs.get-environment.outputs.stability != 'stable'

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Setup PHP
        uses: shivammathur/setup-php@cf4cade2721270509d5b1c766ab3549210a39a2a # v2.33.0
        with:
          php-version: 8.2
          coverage: none
        env:
          runner: ubuntu-24.04

      - name: Install Dependencies for quality tools
        run: composer install --optimize-autoloader
        working-directory: tools
        shell: bash

      - name: Install Dependencies for centreon-open-tickets
        run: composer install --optimize-autoloader
        working-directory: centreon-open-tickets
        shell: bash

      - name: Run of php-cs-fixer on the legacy section for the /www directory
        run: composer cs:legacy:www
        working-directory: centreon-open-tickets

      - name: Run of php-cs-fixer on the legacy section for the /src/CentreonOpenTickets directory
        run: composer cs:legacy:src
        working-directory: centreon-open-tickets

      - name: Run of phpstan on the legacy section for the /www directory at level 2
        run: composer stan:legacy:www
        working-directory: centreon-open-tickets

      - name: Run of phpstan on the legacy section for the /src/CentreonOpenTickets directory at level 9
        run: composer stan:legacy:src
        working-directory: centreon-open-tickets

      - name: Run of rector
        run: composer rector
        working-directory: centreon-open-tickets

  backend-unit-test:
    runs-on: ubuntu-24.04
    needs: [get-environment]
    if: |
      needs.get-environment.outputs.skip_workflow == 'false' &&
      needs.get-environment.outputs.stability != 'stable'

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Setup PHP
        uses: shivammathur/setup-php@cf4cade2721270509d5b1c766ab3549210a39a2a # v2.33.0
        with:
          php-version: 8.2
          coverage: none
        env:
          runner: ubuntu-24.04

      - name: Install dependencies
        uses: ramsey/composer-install@3cf229dc2919194e9e36783941438d17239e8520 # v3.1.1
        with:
          working-directory: centreon-open-tickets
          composer-options: "--optimize-autoloader"

      - name: Unit test
        run: XDEBUG_MODE=coverage composer run-script test:ci
        working-directory: centreon-open-tickets

      - if: failure()
        uses: ./.github/actions/publish-report
        with:
          path: "centreon/build/phpunit.xml"
          format: "php-junit"

  package:
    needs:
      [
        get-environment,
        check-version-consistency,
        backend-lint,
        backend-unit-test
      ]
    if: |
      needs.get-environment.outputs.skip_workflow == 'false' &&
      needs.get-environment.outputs.stability != 'stable' &&
      ! cancelled() &&
      ! contains(needs.*.result, 'failure') &&
      ! contains(needs.*.result, 'cancelled')

    strategy:
      fail-fast: false
      matrix:
        distrib: [el8, el9, bookworm, jammy]
        include:
          - package_extension: rpm
            image: packaging-nfpm-alma8
            distrib: el8
          - package_extension: rpm
            image: packaging-nfpm-alma9
            distrib: el9
          - package_extension: deb
            image: packaging-nfpm-bookworm
            distrib: bookworm
          - package_extension: deb
            image: packaging-nfpm-jammy
            distrib: jammy

    runs-on: ubuntu-24.04

    container:
      image: ${{ vars.DOCKER_INTERNAL_REGISTRY_URL }}/${{ matrix.image }}:${{ needs.get-environment.outputs.major_version }}
      credentials:
        username: ${{ secrets.HARBOR_CENTREON_PULL_USERNAME }}
        password: ${{ secrets.HARBOR_CENTREON_PULL_TOKEN }}

    name: package ${{ matrix.distrib }}

    steps:
      - name: Checkout sources
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Remove some providers from cloud version
        if: ${{ needs.get-environment.outputs.is_cloud == 'true' }}
        run: |
          rm -rf centreon-open-tickets/www/modules/centreon-open-tickets/providers/{BmcItsm,Mail,Serena}
          sed -i '/\(BmcItsm\|Mail\|Serena\)/d' centreon-open-tickets/www/modules/centreon-open-tickets/providers/register.php
        shell: bash

      - name: Package
        uses: ./.github/actions/package-nfpm
        with:
          nfpm_file_pattern: "centreon-open-tickets/packaging/*.yaml"
          module_name: centreon-open-tickets
          distrib: ${{ matrix.distrib }}
          package_extension: ${{ matrix.package_extension }}
          major_version: ${{ needs.get-environment.outputs.major_version }}
          minor_version: ${{ needs.get-environment.outputs.minor_version }}
          release: ${{ needs.get-environment.outputs.release }}
          arch: all
          commit_hash: ${{ github.sha }}
          cache_key: ${{ github.sha }}-${{ github.run_id }}-${{ matrix.package_extension }}-${{ matrix.distrib }}
          rpm_gpg_key: ${{ secrets.RPM_GPG_SIGNING_KEY }}
          rpm_gpg_signing_key_id: ${{ secrets.RPM_GPG_SIGNING_KEY_ID }}
          rpm_gpg_signing_passphrase: ${{ secrets.RPM_GPG_SIGNING_PASSPHRASE }}
          stability: ${{ needs.get-environment.outputs.stability }}

  dockerize:
    runs-on: ubuntu-24.04
    needs: [get-environment, package]
    if: |
      needs.get-environment.outputs.skip_workflow == 'false' &&
      ! cancelled() &&
      ! contains(needs.*.result, 'failure') &&
      ! contains(needs.*.result, 'cancelled') &&
      needs.get-environment.outputs.stability != 'stable' &&
      github.repository == 'centreon/centreon'

    env:
      project: centreon-open-tickets
    strategy:
      fail-fast: false
      matrix:
        operating_system: [alma9]

    name: dockerize ${{ matrix.operating_system }}

    steps:
      - name: Checkout sources
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Generate information according to matrix os
        id: matrix_include
        run: |
          if [ "${{ matrix.operating_system }}" = "alma8" ]; then
            DISTRIB=el8
            PACKAGE_EXTENSION=rpm
          elif [ "${{ matrix.operating_system }}" = "alma9" ]; then
            DISTRIB=el9
            PACKAGE_EXTENSION=rpm
          elif [ "${{ matrix.operating_system }}" = "bookworm" ]; then
            DISTRIB=bookworm
            PACKAGE_EXTENSION=deb
          elif [ "${{ matrix.operating_system }}" = "jammy" ]; then
            DISTRIB=jammy
            PACKAGE_EXTENSION=deb
          else
            echo "::error::${{ matrix.operating_system }} is not managed"
            exit 1
          fi

          echo "distrib=$DISTRIB" >> $GITHUB_OUTPUT
          echo "package_extension=$PACKAGE_EXTENSION" >> $GITHUB_OUTPUT
        shell: bash

      - name: Login to registry
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          registry: ${{ vars.DOCKER_INTERNAL_REGISTRY_URL }}
          username: ${{ secrets.HARBOR_CENTREON_PUSH_USERNAME }}
          password: ${{ secrets.HARBOR_CENTREON_PUSH_TOKEN }}

      - name: Get FROM image tag
        id: from_image_version
        run: |
          FROM_IMAGE_VERSION=$(git ls-remote -h https://github.com/centreon/centreon.git | grep -E "refs/heads/dev-${{ needs.get-environment.outputs.major_version }}\.x$" >/dev/null 2>&1 && echo "dev-${{ needs.get-environment.outputs.major_version }}.x" || echo develop)
          FROM_IMAGE="centreon-web-${{ matrix.operating_system }}"
          IMAGE_TAG_EXISTS=$(docker manifest inspect ${{ vars.DOCKER_INTERNAL_REGISTRY_URL }}/${FROM_IMAGE}:${{ github.head_ref || github.ref_name }} >/dev/null 2>&1 && echo yes || echo no)
          if [[ "$IMAGE_TAG_EXISTS" == "yes" ]]; then
            FROM_IMAGE_VERSION="${{ github.head_ref || github.ref_name }}"
            echo "::notice::FROM image $FROM_IMAGE:$FROM_IMAGE_VERSION will be used to build docker image ${{ env.project }}-${{ matrix.operating_system }}."
          else
            IMAGE_TAG_EXISTS=$(docker manifest inspect ${{ vars.DOCKER_INTERNAL_REGISTRY_URL }}/${FROM_IMAGE}:${{ github.base_ref || github.ref_name }} >/dev/null 2>&1 && echo yes || echo no)
            if [[ "$IMAGE_TAG_EXISTS" == "yes" ]]; then
              FROM_IMAGE_VERSION="${{ github.base_ref || github.ref_name }}"
              echo "::notice::FROM image $FROM_IMAGE:$FROM_IMAGE_VERSION will be used to build docker image ${{ env.project }}-${{ matrix.operating_system }}."
            fi
          fi

          echo "from_image_version=$FROM_IMAGE_VERSION" >> $GITHUB_OUTPUT
        shell: bash

      - name: Restore ${{ steps.matrix_include.outputs.package_extension }} files
        uses: actions/cache/restore@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
        with:
          path: ./*.${{ steps.matrix_include.outputs.package_extension }}
          key: ${{ github.sha }}-${{ github.run_id }}-${{ steps.matrix_include.outputs.package_extension }}-${{ steps.matrix_include.outputs.distrib }}
          fail-on-cache-miss: true

      - run: |
          mkdir packages-centreon
          mv *.${{ steps.matrix_include.outputs.package_extension }} packages-centreon/
        shell: bash

      - uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3.10.0

      - name: Build and push web image
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
        env:
          DOCKER_BUILD_CHECKS_ANNOTATIONS: false
          DOCKER_BUILD_SUMMARY: false
          DOCKER_BUILD_RECORD_UPLOAD: false
        with:
          file: .github/docker/${{ env.project }}/Dockerfile
          context: .
          build-args: |
            "REGISTRY_URL=${{ vars.DOCKER_INTERNAL_REGISTRY_URL }}"
            "FROM_IMAGE_VERSION=${{ steps.from_image_version.outputs.from_image_version }}"
          pull: true
          push: true
          tags: ${{ vars.DOCKER_INTERNAL_REGISTRY_URL }}/${{ env.project }}-${{ matrix.operating_system }}:${{ github.head_ref || github.ref_name }}

  deliver-sources:
    runs-on: centreon-common
    needs: [get-environment, package]
    if: |
      needs.get-environment.outputs.skip_workflow == 'false' &&
      contains(fromJson('["stable"]'), needs.get-environment.outputs.stability) &&
      github.event_name != 'workflow_dispatch' &&
      github.repository == 'centreon/centreon' &&
      ! cancelled() &&
      ! contains(needs.*.result, 'failure') &&
      ! contains(needs.*.result, 'cancelled')

    steps:
      - name: Checkout sources
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Deliver sources
        uses: ./.github/actions/release-sources
        with:
          bucket_directory: centreon-open-tickets
          module_directory: centreon-open-tickets
          module_name: centreon-open-tickets
          major_version: ${{ needs.get-environment.outputs.major_version }}
          minor_version: ${{ needs.get-environment.outputs.minor_version }}
          token_download_centreon_com: ${{ secrets.TOKEN_DOWNLOAD_CENTREON_COM }}

  create-xray-test-plan-and-test-execution:
    needs: [get-environment, dockerize]
    if: |
      needs.get-environment.outputs.skip_workflow == 'false' &&
      ! cancelled() &&
      ! contains(needs.*.result, 'failure') &&
      ! contains(needs.*.result, 'cancelled') &&
      ( needs.get-environment.outputs.stability == 'testing' || github.event_name == 'schedule' )
    strategy:
      fail-fast: false
      matrix:
        include: ${{ fromJson(needs.get-environment.outputs.os_and_database_matrix).operating_systems }}
    name: create-xray-test-plan-and-test-execution-${{ matrix.operating_system }}

    uses: ./.github/workflows/create-xray-test-plan-and-test-execution.yml
    with:
      major_version: ${{ needs.get-environment.outputs.major_version }}
      minor_version: ${{ needs.get-environment.outputs.minor_version }}
      os: ${{ matrix.operating_system }}
    secrets:
      xray_client_id: ${{ secrets.XRAY_CLIENT_ID }}
      xray_client_secret: ${{ secrets.XRAY_CLIENT_SECRET }}
      xray_jira_user_email: ${{ secrets.XRAY_JIRA_USER_EMAIL }}
      xray_jira_token: ${{ secrets.XRAY_JIRA_TOKEN }}

  e2e-test:
    needs: [get-environment, create-xray-test-plan-and-test-execution, dockerize]
    if: |
      needs.get-environment.outputs.skip_workflow == 'false' &&
      ! cancelled() &&
      ! contains(needs.*.result, 'failure') &&
      ! contains(needs.*.result, 'cancelled') &&
      needs.get-environment.outputs.stability != 'stable'
    strategy:
      fail-fast: false
      matrix:
        include: ${{ fromJson(needs.get-environment.outputs.os_and_database_matrix).operating_systems }}
    name: e2e-test-${{ matrix.operating_system }}-${{ matrix.database }}

    uses: ./.github/workflows/cypress-e2e-parallelization.yml
    with:
      name: e2e
      module_name: centreon-open-tickets
      image_name: centreon-open-tickets
      database_image: bitnami/${{ matrix.database }}
      os: ${{ matrix.operating_system }}
      features_path: tests/e2e/features
      major_version: ${{ needs.get-environment.outputs.major_version }}
      minor_version: ${{ needs.get-environment.outputs.minor_version }}
      stability: ${{ needs.get-environment.outputs.stability }}
      target_stability: ${{ needs.get-environment.outputs.target_stability }}
      package_cache_key: ${{ format('{0}-{1}-{2}', github.sha, github.run_id, matrix.operating_system == 'alma8' && 'rpm-el8' || matrix.operating_system == 'alma9' && 'rpm-el9' || 'deb-bookworm' ) }}
      package_directory: centreon-open-tickets/tests/e2e/fixtures/packages
      test_tags: ${{ matrix.test_tags }}
      dependencies_lock_file: centreon-open-tickets/tests/e2e/pnpm-lock.yaml
      xray_keys_and_ids: ${{ toJson(needs.create-xray-test-plan-and-test-execution.outputs) }}
      is_cloud: ${{ needs.get-environment.outputs.is_cloud }}
      is_nightly: ${{ needs.get-environment.outputs.is_nightly }}
    secrets:
      registry_username: ${{ secrets.HARBOR_CENTREON_PULL_USERNAME }}
      registry_password: ${{ secrets.HARBOR_CENTREON_PULL_TOKEN }}
      xray_client_id: ${{ secrets.XRAY_CLIENT_ID }}
      xray_client_secret: ${{ secrets.XRAY_CLIENT_SECRET }}
      artifactory_internal_repo_username: ${{ secrets.ARTIFACTORY_INTERNAL_REPO_USERNAME }}
      artifactory_internal_repo_password: ${{ secrets.ARTIFACTORY_INTERNAL_REPO_PASSWORD }}
      jira_base_url: ${{ secrets.JIRA_BASE_URL }}
      jira_user_email: ${{ secrets.XRAY_JIRA_USER_EMAIL }}
      jira_api_token: ${{ secrets.XRAY_JIRA_TOKEN }}

  deliver-rpm:
    needs: [get-environment, package]
    if: |
      needs.get-environment.outputs.skip_workflow == 'false' &&
      contains(fromJson('["testing", "unstable"]'), needs.get-environment.outputs.stability) &&
      ! cancelled() &&
      ! contains(needs.*.result, 'failure') &&
      ! contains(needs.*.result, 'cancelled') &&
      github.repository == 'centreon/centreon'
    runs-on: centreon-common

    strategy:
      matrix:
        distrib: [el8, el9]

    steps:
      - name: Checkout sources
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Delivery
        uses: ./.github/actions/rpm-delivery
        with:
          module_name: open-tickets
          distrib: ${{ matrix.distrib }}
          version: ${{ needs.get-environment.outputs.major_version }}
          artifactory_token: ${{ secrets.ARTIFACTORY_ACCESS_TOKEN }}
          cache_key: ${{ github.sha }}-${{ github.run_id }}-rpm-${{ matrix.distrib }}
          stability: ${{ needs.get-environment.outputs.stability }}
          release_type: ${{ needs.get-environment.outputs.release_type }}
          is_cloud: ${{ needs.get-environment.outputs.is_cloud }}

  deliver-deb:
    needs: [get-environment, package]
    if: |
      needs.get-environment.outputs.skip_workflow == 'false' &&
      contains(fromJson('["testing", "unstable"]'), needs.get-environment.outputs.stability) &&
      ! cancelled() &&
      ! contains(needs.*.result, 'failure') &&
      ! contains(needs.*.result, 'cancelled') &&
      github.repository == 'centreon/centreon' &&
      (needs.get-environment.outputs.is_cloud == 'false' || needs.get-environment.outputs.stability == 'unstable')
    runs-on: centreon-common

    strategy:
      matrix:
        distrib: [bookworm]
    steps:
      - name: Checkout sources
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Delivery
        uses: ./.github/actions/deb-delivery
        with:
          module_name: open-tickets
          distrib: ${{ matrix.distrib }}
          version: ${{ needs.get-environment.outputs.major_version }}
          artifactory_token: ${{ secrets.ARTIFACTORY_ACCESS_TOKEN }}
          cache_key: ${{ github.sha }}-${{ github.run_id }}-deb-${{ matrix.distrib }}
          stability: ${{ needs.get-environment.outputs.stability }}
          release_type: ${{ needs.get-environment.outputs.release_type }}
          is_cloud: ${{ needs.get-environment.outputs.is_cloud }}

  promote:
    needs: [get-environment, deliver-rpm, deliver-deb]
    if: |
      needs.get-environment.outputs.skip_workflow == 'false' &&
      (contains(fromJson('["stable", "testing"]'), needs.get-environment.outputs.stability) && github.event_name != 'workflow_dispatch') &&
      ! cancelled() &&
      ! contains(needs.*.result, 'failure') &&
      ! contains(needs.*.result, 'cancelled') &&
      github.repository == 'centreon/centreon'
    runs-on: centreon-common
    strategy:
      matrix:
        distrib: [el8, el9, bookworm]

    steps:
      - name: Checkout sources
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Promote ${{ matrix.distrib }} to stable
        uses: ./.github/actions/promote-to-stable
        with:
          artifactory_token: ${{ secrets.ARTIFACTORY_ACCESS_TOKEN }}
          module: open-tickets
          distrib: ${{ matrix.distrib }}
          major_version: ${{ needs.get-environment.outputs.major_version }}
          minor_version: ${{ needs.get-environment.outputs.minor_version }}
          stability: ${{ needs.get-environment.outputs.stability }}
          github_ref_name: ${{ github.ref_name }}
          release_type: ${{ needs.get-environment.outputs.release_type }}
          is_cloud: ${{ needs.get-environment.outputs.is_cloud }}

  set-skip-label:
    needs: [get-environment, deliver-rpm, deliver-deb, promote]
    if: |
      needs.get-environment.outputs.skip_workflow == 'false' &&
      ! cancelled() &&
      ! contains(needs.*.result, 'failure') &&
      ! contains(needs.*.result, 'cancelled')
    uses: ./.github/workflows/set-pull-request-skip-label.yml
