on:
  workflow_call:
    inputs:
      name:
        required: true
        type: string
      module_name:
        required: true
        type: string
      specs_path:
        required: true
        type: string
      spec_extension:
        required: false
        type: string
        default: ".cypress.spec.tsx"
      dependencies_lock_file:
        required: true
        type: string
        description: 'The frontend dependencies lock file path'
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true

jobs:
  cypress-component-test-list:
    runs-on: ubuntu-24.04
    outputs:
      specs: ${{ steps.list-specs.outputs.specs }}

    steps:
      - name: Checkout sources
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - name: List of specs
        id: list-specs
        run: |
          cd ${{ inputs.module_name }}
          echo "specs=$(find ${{ inputs.specs_path }} -type f -name "*${{ inputs.spec_extension }}" -exec basename {} \; | sed -e "s/${{ inputs.spec_extension }}//" | sort | jq -R -s -c 'split("\n")[:-1]')" >> $GITHUB_OUTPUT

  cypress-component-test-run:
    needs: [cypress-component-test-list]
    runs-on: ubuntu-24.04
    strategy:
      fail-fast: false
      matrix:
        spec: ${{ fromJson(needs.cypress-component-test-list.outputs.specs) }}
    name: ${{ matrix.spec }}

    steps:
      - name: Checkout sources
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - uses: pnpm/action-setup@a3252b78c470c02df07e9d59298aecedc3ccdd6d # v3.0.0
        with:
          version: 8
          run_install: false

      - uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4.0.2
        with:
          node-version: 20
          cache: pnpm
          cache-dependency-path: ${{ inputs.dependencies_lock_file }}

      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        working-directory: ${{ inputs.module_name }}
        shell: bash
        env:
          CYPRESS_INSTALL_BINARY: "0"
          PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: "1"
          PUPPETEER_SKIP_CHROMIUM_DOWNLOAD: "true"

      - name: Install Cypress binary
        uses: nick-fields/retry@7152eba30c6575329ac0576536151aca5a72780e # v3.0.0
        with:
          timeout_seconds: 120
          max_attempts: 10
          retry_wait_seconds: 30
          retry_on: error
          command: cd ${{ inputs.module_name }} && pnpm cypress install --force

      - name: Cypress web component testing
        uses: cypress-io/github-action@1b70233146622b69e789ccdd4f9452adc638d25a # v6.6.1
        with:
          browser: chrome
          component: true
          install: false
          cache-key: cypress-cache-${{ runner.os }}-${{ hashFiles(inputs.dependencies_lock_file) }}
          working-directory: ${{ inputs.module_name }}
          spec: ./**/${{ matrix.spec }}${{ inputs.spec_extension }}
          publish-summary: false
          env: codeCoverageTasksRegistered=true

      - name: Clean up code coverage results
        shell: bash
        run: node centreon/packages/js-config/cypress/component/excludeNodeModulesFromCoverage.js ${{ inputs.module_name }}/.nyc_output/out.json

      - name: Archive test results
        uses: actions/upload-artifact@5d5d22a31266ced268874388b861e4b58bb5c2f3 # v4.3.1
        if: ${{ failure() }}
        with:
          name: ${{ inputs.name }}-component-test-results-${{ matrix.spec }}
          path: |
            ${{ inputs.module_name }}/cypress/results/videos
            ${{ inputs.module_name }}/cypress/screenshots
            ${{ inputs.module_name }}/cypress/visual-testing-snapshots/**/*.diff.png
          retention-days: 1

      - name: Archive test reports
        if: ${{ failure() }}
        uses: actions/upload-artifact@5d5d22a31266ced268874388b861e4b58bb5c2f3 # v4.3.1
        with:
          name: ${{ inputs.name }}-component-test-reports-${{ matrix.spec }}
          path: ${{ inputs.module_name }}/cypress/results/*.json
          retention-days: 1

      - name: Change coverage report name
        run: mv ${{ inputs.module_name }}/.nyc_output/out.json ${{ inputs.module_name }}/.nyc_output/${{ matrix.spec }}-out.json
        shell: bash

      - name: Archive test coverage
        uses: actions/upload-artifact@5d5d22a31266ced268874388b861e4b58bb5c2f3 # v4.3.1
        with:
          name: ${{ inputs.name }}-component-test-coverage-${{ matrix.spec }}
          path: ${{ inputs.module_name }}/.nyc_output/${{ matrix.spec }}-out.json
          retention-days: 1

  cypress-component-coverage-report:
    needs: [cypress-component-test-run]
    if: always()
    runs-on: ubuntu-24.04

    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - uses: pnpm/action-setup@fe02b34f77f8bc703788d5817da081398fad5dd2 # v4.0.0
        with:
          version: 8

      - name: Download coverage reports
        uses: actions/download-artifact@87c55149d96e628cc2ef7e6fc2aab372015aec85 # v4.1.3
        with:
          pattern: ${{ inputs.name }}-component-test-coverage-*
          path: .nyc_output/
          merge-multiple: true

      - uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502 # v4.0.2
        if: ${{ github.event_name == 'pull_request' || github.ref_name == 'develop' }}
        with:
          aws-region: eu-west-1
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Retrieve dynamic code coverages file
        shell: bash
        if: ${{ github.event_name == 'pull_request' || github.ref_name == 'develop'}}
        run: |
          aws s3 cp s3://centreon-lighthouse-report/baseCodeCoverages.json /tmp/

      - name: Merge coverage reports
        run: |
          pnpx nyc merge .nyc_output
          mv coverage.json .nyc_output/out.json
        shell: bash

      - name: Generate lcov coverage report
        run: pnpx nyc report --reporter=lcov --reporter html
        shell: bash

      - name: Format title
        id: title
        run: |
          MODULE_NAME=`echo "${{ inputs.module_name }}" | sed -e "s#/#-#g"`
          echo "replaced=$MODULE_NAME" >> $GITHUB_OUTPUT
        shell: bash

      - name: Install action dependencies
        run: pnpm install --frozen-lockfile
        working-directory: ./.github/actions/code-coverage-gate-keeper
        shell: bash

      - name: Archive HTML code coverage
        uses: actions/upload-artifact@5d5d22a31266ced268874388b861e4b58bb5c2f3 # v4.3.1
        with:
          name: ${{ steps.title.outputs.replaced }}-${{ inputs.name }}-code-coverage
          path: coverage/lcov-report
          retention-days: 1

      - name: Publish code coverage to PR
        uses: romeovs/lcov-reporter-action@87a815f34ec27a5826abba44ce09bbc688da58fd # v0.4.0
        if: ${{ github.event_name == 'pull_request' }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          title: Code coverage report for ${{ steps.title.outputs.replaced }} ${{ inputs.name }} ðŸš€
          delete-old-comments: true
          filter-changed-files: true

      - name: Check Code coverage
        id: checkCodeCoverage
        uses: ./.github/actions/code-coverage-gate-keeper
        if: ${{ (github.event_name == 'pull_request' && github.event.pull_request.base.ref == 'develop') || github.ref_name == 'develop' }}
        with:
          module_path: ${{ inputs.module_name }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          name: ${{ steps.title.outputs.replaced }}
          dynamicCodeCoveragesFilePath: /tmp/baseCodeCoverages.json
          generateNewCodeCoverages: ${{ github.ref_name == 'develop' && github.event.inputs.is_nightly == 'false' }}

      - name: Send new dynamic code coverages
        if: ${{ github.ref_name == 'develop' && github.event.inputs.is_nightly == 'false' && steps.checkCodeCoverage.outputs.has_new_code_coverage }}
        run: |
          aws s3 cp /tmp/newBaseCodeCoverages.json s3://centreon-lighthouse-report/baseCodeCoverages.json
        shell: bash

  cypress-component-test-report:
    needs: [cypress-component-test-run]
    if: failure()
    runs-on: ubuntu-24.04

    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - uses: pnpm/action-setup@fe02b34f77f8bc703788d5817da081398fad5dd2 # v4.0.0
        with:
          version: 8

      - name: Download Artifacts
        uses: actions/download-artifact@87c55149d96e628cc2ef7e6fc2aab372015aec85 # v4.1.3
        with:
          pattern: ${{ inputs.name }}-component-test-reports-*
          path: ${{ inputs.name }}-json-reports
          merge-multiple: true

      - name: Merge reports
        run: |
          pnpx mochawesome-merge "${{ inputs.name }}-json-reports/**/*.json" > mochawesome.json
        shell: bash

      - name: Publish report
        uses: ./.github/actions/publish-report
        with:
          check_name: ${{ inputs.name }}-report
          path: mochawesome.json
          format: cypress
          urlFilePrefix: centreon

  regroup-artifacts:
    needs: [cypress-component-coverage-report, cypress-component-test-report, cypress-component-test-run]
    if: always()
    runs-on: ubuntu-24.04
    strategy:
      fail-fast: false
      matrix:
        type_of_report: [test-results, test-reports, test-coverage]
    steps:
      - name: Merge Artifacts
        uses: actions/upload-artifact/merge@65462800fd760344b1a7b4382951275a0abb4808 # v4.3.3
        if: ${{ ( contains(needs.cypress-component-test-run.result, 'failure') && ( matrix.type_of_report == 'test-reports' ) ) || matrix.type_of_report == 'test-coverage' }}
        with:
          name: ${{ inputs.name }}-component-${{ matrix.type_of_report }}
          pattern: ${{ inputs.name }}-component-${{ matrix.type_of_report }}-*
          delete-merged: false # cannot be set to true due to random fails: Failed to DeleteArtifact: Unable to make request: ECONNRESET
          retention-days: 1

      - name: Delete merged artifacts
        if: ${{ matrix.type_of_report != 'test-coverage' || needs.cypress-component-test-run.result == 'success' }}
        uses: geekyeggo/delete-artifact@24928e75e6e6590170563b8ddae9fac674508aa1 # v5.0.0
        with:
          name: ${{ inputs.name }}-component-${{ matrix.type_of_report }}-*
          failOnError: false
