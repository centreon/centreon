name: prepare-widgets

on:
  workflow_dispatch:
  pull_request:
    paths:
      - '.github/workflows/prepare-widgets.yml'
      - 'widgets/**'
  push:
    paths:
      - '.github/workflows/prepare-widgets.yml'
      - 'widgets/**'
    tags:
      - centreon-widget.**

env:
  version: "22.10"
  module: "widgets"

jobs:
  get-modules:
    runs-on: ubuntu-22.04
    name: Get modules for building
    outputs:
      matrix: ${{ steps.command.outputs.matrix }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      - run: pip install GitPython

      - name: Get widget modules
        id: command
        run: |
          sudo git config --global --add safe.directory $(pwd)
          JSON=$(cat << EOF | python3
          from os import path
          from git import Repo
          import json
          import re
          repo = Repo()
          commits = list(repo.iter_commits())
          dir = { "include": [] }
          for i in commits[1].diff(commits[2]):
            if re.match(r'^widgets\/centreon-widget.*', path.dirname(i.a_path)):
              module = re.search(r'centreon-widget.*?(?=\/|$)', path.dirname(i.a_path)).group()
              if module not in [x['module-name'] for x in dir['include']]:
                dir['include'].append({'module-name': module})
          if dir['include'] == []:
            dir = []
          print(json.dumps(dir))
          EOF
          )
          echo "matrix=$(echo "$JSON")" >> $GITHUB_OUTPUT
          echo $JSON
          if [ "$(echo $JSON)" == '[]' ]; then
            echo "::notice::There are no modifications to the modules"
          fi

  build-widgets:
    name: Build Widget
    needs: get-modules
    if: ${{ needs.get-modules.outputs.matrix != '[]' }}
    strategy:
      matrix: ${{ fromJson(needs.get-modules.outputs.matrix) }}
    uses: ./.github/workflows/run-widgets.yml
    with:
      module-name: ${{ matrix.module-name }}
    secrets:
      nexus_username: ${{ secrets.ARTI_USER }}
      nexus_password: ${{ secrets.ARTI_PASSWD }}
