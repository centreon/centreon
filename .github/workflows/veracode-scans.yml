# Veracode pipeline scans
on:
  workflow_call:
    inputs:
      module_directory:
        required: true
        type: string
      module_name:
        required: true
        type: string
      major_version:
        required: true
        type: string
      minor_version:
        required: true
        type: string
      stability:
        required: true
        type: string
      threshold_pipeline:
        required: true
        type: string
      threshold_sandbox:
        required: true
        type: string
    secrets:
      veracode_api_id:
        required: true
      veracode_api_key:
        required: true

jobs:
  build:
    runs-on: ubuntu-22.04
    outputs:
      scan_type: ${{ steps.routing-mode.outputs.scan_type }}

    steps:
      - uses: actions/checkout@v3

      - name: Generate binary file
        uses: ./.github/actions/veracode-generate-binary
        with:
          module_directory: "${{ inputs.module_directory }}"
          module_name: "${{ inputs.module_name }}"
          cache_key: "${{ github.sha }}-${{ github.run_id }}-${{ inputs.module_name }}-veracode-binary"

      - name: Set routing mode
        id: routing-mode
        if: github.event_name != 'pull_request' && (inputs.stability == 'stable' || inputs.stability == 'unstable')
        run: echo "scan_type=maintenance" >> $GITHUB_OUTPUT

  pipeline-scan:
    needs: [build]
    runs-on: [self-hosted, veracode]

    steps:
      - name: Debug github context
        run: echo "base ref = ${{ github.base_ref }} && ref name = ${{ github.ref_name }}"

      - name: Get build binary
        uses: actions/cache/restore@v3
        with:
          path: ${{ inputs.module_directory }}/${{ inputs.module_name }}.zip
          key: ${{ github.sha }}-${{ github.run_id }}-${{ inputs.module_name }}-veracode-binary

      - uses: actions/setup-java@v3 #TODO: To install in veracode runner directly
        with:
          distribution: 'zulu'
          java-version: 8

      - name: Setup awscli #TODO: To install in veracode runner directly
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          sudo unzip -q awscliv2.zip
          sudo ./aws/install

      - name: Get baseline file
        id: baseline_search
        run: |
          TARGET_S3="s3://centreon-veracode-reports/${{ inputs.module_name }}/${{ github.base_ref || github.ref_name }}/results.json"
          BASELINE_FILE="/tmp/results.json"
          aws s3 ls "$TARGET_S3" || RESULT=$( echo $? )
          if [[ $RESULT -eq 0 ]]; then
            aws s3 cp "$TARGET_S3" "$BASELINE_FILE"
            echo "baseline_file=$BASELINE_FILE" >> $GITHUB_ENV
          else
            echo "[DEBUG] - File not found in the bucket"
            echo "baseline_file=" >> $GITHUB_ENV
          fi

      - name: Debug me
        run: |
          echo "ls on current"
          ls -la

          echo "ls on /tmp"
          ls -la /tmp

          echo "baseline file name"
          echo "baseline: ${{ env.baseline_file }}"
          echo "find baseline file"
          echo "find ./ -name '${{ env.baseline_file }}'"

          echo "archive name name"
          echo "archive name: '${{ inputs.module_name }}-${{ github.base_ref || github.ref_name }}.zip'"
          echo "find archive file"
          echo "find ./ -name '${{ inputs.module_name }}-${{ github.base_ref || github.ref_name }}.zip'"

      - name: Pipeline scan
        uses: veracode/Veracode-pipeline-scan-action@v1.0.3
        with:
          vid: '${{ secrets.veracode_api_id }}'
          vkey: '${{ secrets.veracode_api_key }}'
          file: "${{ inputs.module_name }}.zip"
          fail_build: false #TODO: Do not fail the jobs until grace period ends
          #fail_on_severity: "${{ inputs.threshold_pipeline }}"
          timeout: 60
          baseline_file: "${{ env.baseline_file }}"

      - name: Save baseline file
        # only baseline file generated from a maintenance branch is saved
        #if: needs.set-routing-mode.outputs.scan_type == 'maintenance'
        run: |
          mv results.json /tmp
          TARGET_S3="s3://centreon-veracode-reports/${{ inputs.module_name }}/${{ github.base_ref || github.ref_name }}/results.json"
          BASELINE_FILE="/tmp/results.json"
          aws s3 cp "$BASELINE_FILE" "$TARGET_S3"
