name: docker-stable

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

on:
  workflow_run:
    workflows: ["web"]
    types:
      - completed
    branches:
      - "master"
  workflow_dispatch:

jobs:
  get-environment:
    if: github.repository == 'centreon/centreon'
    uses: ./.github/workflows/get-environment.yml
    with:
      version_file: centreon/www/install/insertBaseConf.sql

  dockerize-stable:
    needs: [get-environment]
    runs-on: ubuntu-24.04
    if: ${{ needs.get-environment.outputs.skip_workflow == 'false' && !cancelled() && !contains(needs.*.result, 'failure') && !contains(needs.*.result, 'cancelled') && needs.get-environment.outputs.stability == 'stable' && github.ref_name == 'master' }}

    env:
      project: centreon-web

    strategy:
      fail-fast: false
      matrix:
        include: ${{ fromJson(needs.get-environment.outputs.os_and_database_matrix).operating_systems }}

    name: dockerize ${{ matrix.operating_system }}

    steps:
      - name: Checkout sources
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Generate information according to matrix os
        id: matrix_include
        run: |
          if [ "${{ matrix.operating_system }}" = "alma8" ]; then
            DISTRIB=el8
            PACKAGE_EXTENSION=rpm
          elif [ "${{ matrix.operating_system }}" = "alma9" ]; then
            DISTRIB=el9
            PACKAGE_EXTENSION=rpm
          elif [ "${{ matrix.operating_system }}" = "bullseye" ]; then
            DISTRIB=bullseye
            PACKAGE_EXTENSION=deb
          elif [ "${{ matrix.operating_system }}" = "bookworm" ]; then
            DISTRIB=bookworm
            PACKAGE_EXTENSION=deb
          elif [ "${{ matrix.operating_system }}" = "jammy" ]; then
            DISTRIB=jammy
            PACKAGE_EXTENSION=deb
          else
            echo "::error::${{ matrix.operating_system }} is not managed"
            exit 1
          fi

          echo "distrib=$DISTRIB" >> $GITHUB_OUTPUT
          echo "package_extension=$PACKAGE_EXTENSION" >> $GITHUB_OUTPUT
        shell: bash

      - name: Login to registry
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          registry: ${{ vars.DOCKER_INTERNAL_REGISTRY_URL }}
          username: ${{ secrets.HARBOR_CENTREON_PUSH_USERNAME }}
          password: ${{ secrets.HARBOR_CENTREON_PUSH_TOKEN }}

      - uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1

      - name: Build and push web image
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
        with:
          file: .github/docker/${{ env.project }}/${{ matrix.operating_system }}/Dockerfile
          context: .
          build-args: |
            "REGISTRY_URL=${{ vars.DOCKER_INTERNAL_REGISTRY_URL }}"
            "VERSION=${{ needs.get-environment.outputs.major_version }}"
            "MYDUMPER_VERSION=0.16.3-5"
          pull: true
          push: false
          load: true
          tags: ${{ vars.DOCKER_INTERNAL_REGISTRY_URL }}/${{ env.project }}-${{ matrix.operating_system }}:${{ github.ref_name }}
