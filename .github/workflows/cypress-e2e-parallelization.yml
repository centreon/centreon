name: cypress-e2e-test

on:
  workflow_call:
    inputs:
      name:
        required: true
        type: string
      module_name:
        required: true
        type: string
      database_image:
        required: true
        type: string
      image_name:
        required: true
        type: string
      os:
        required: true
        type: string
      features_path:
        required: true
        type: string
      major_version:
        required: true
        type: string
      minor_version:
        required: true
        type: string
      stability:
        required: true
        type: string
      target_stability:
        required: false
        type: string
      package_cache_key:
        required: false
        type: string
      package_directory:
        required: false
        type: string
      test_tags:
        required: false
        type: string
        default: "not @ignore"
      dependencies_lock_file:
        required: true
        type: string
        description: "The frontend dependencies lock file path"
      xray_keys_and_ids:
        description: "The test execution and the test plan keys and ids"
        required: true
        type: string
      is_cloud:
        description: "Define if the version is targeting cloud"
        required: false
        type: string # Set as string instead of boolean to avoid mixing types between workflows and actions
        default: 'false'
      is_nightly:
        required: true
        type: string
    secrets:
      registry_username:
        required: true
      registry_password:
        required: true
      xray_client_id:
        required: true
      xray_client_secret:
        required: true
      artifactory_internal_repo_username:
        required: false
      artifactory_internal_repo_password:
        required: false
      jira_base_url:
        required: true
      jira_user_email:
        required: true
      jira_api_token:
        required: true

jobs:
  cypress-e2e-test-list:
    runs-on: ubuntu-24.04
    outputs:
      features: ${{ steps.list-features.outputs.features }}

    steps:
      - name: Checkout sources
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - uses: pnpm/action-setup@fe02b34f77f8bc703788d5817da081398fad5dd2 # v4.0.0
        with:
          version: 8
          run_install: false
          standalone: true

      - name: List features
        id: list-features
        run: |
          pnpm add -g @cucumber/cucumber@10.8.0
          cd ${{ inputs.module_name }}
          cucumber-js ${{ inputs.features_path }} --tags "${{ inputs.test_tags }}" --no-strict --dry-run -f json | jq -r '.[].uri' | sed -e 's#${{ inputs.features_path }}/*##g' | sort | jq -R -s -c 'split("\n")[:-1]'
          echo "features=$(cucumber-js ${{ inputs.features_path }} --tags "${{ inputs.test_tags }}" --no-strict --dry-run -f json | jq -r '.[].uri' | sed -e 's#${{ inputs.features_path }}/*##g' | sort | jq -R -s -c 'split("\n")[:-1]')" >> $GITHUB_OUTPUT

  cypress-e2e-test-run:
    if: ${{ needs.cypress-e2e-test-list.outputs.features != '' && toJson(fromJson(needs.cypress-e2e-test-list.outputs.features)) != '[]' }}
    needs: [cypress-e2e-test-list]
    runs-on: ubuntu-24.04
    strategy:
      fail-fast: false
      matrix:
        feature: ${{ fromJson(needs.cypress-e2e-test-list.outputs.features) }}
    name: ${{ matrix.feature }}

    env:
      IMAGE_TAG: ${{ github.head_ref || github.ref_name }}
      SLIM_IMAGE_NAME: ${{ inputs.image_name }}-slim-${{ inputs.os }}

    steps:
      - name: Checkout sources
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Restore packages
        if: "${{ inputs.package_cache_key != '' && inputs.package_directory != '' && contains(matrix.feature, 'platform-') }}"
        uses: actions/cache/restore@1bd1e32a3bdc45362d1e726936510720a7c30a57 # v4.2.0
        with:
          path: ./*.${{ contains(inputs.os, 'alma') && 'rpm' || 'deb' }}
          key: ${{ inputs.package_cache_key }}
          fail-on-cache-miss: true

      - name: Move packages
        if: "${{ inputs.package_cache_key != '' && inputs.package_directory != '' && contains(matrix.feature, 'platform-') }}"
        run: |
          mkdir -p ${{ inputs.package_directory }}
          mv ./*.${{ contains(inputs.os, 'alma') && 'rpm' || 'deb' }} ${{ inputs.package_directory }}
        shell: bash

      - name: Login to Registry
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
        with:
          registry: ${{ vars.DOCKER_INTERNAL_REGISTRY_URL }}
          username: ${{ secrets.registry_username }}
          password: ${{ secrets.registry_password }}

      - name: Restore standard slim image from cache
        id: cache-docker-slim
        uses: actions/cache/restore@1bd1e32a3bdc45362d1e726936510720a7c30a57 # v4.2.0
        continue-on-error: true
        timeout-minutes: 6
        with:
          path: /tmp/cache/docker-image
          key: docker-image-${{ env.SLIM_IMAGE_NAME }}-${{ env.IMAGE_TAG }}
        env:
          SEGMENT_DOWNLOAD_TIMEOUT_MINS: 5

      - name: Load standard slim image
        if: ${{ steps.cache-docker-slim.outputs.cache-hit == 'true' }}
        run: |
          docker load --input /tmp/cache/docker-image/${{ env.SLIM_IMAGE_NAME }}.tar
          docker tag ${{ env.SLIM_IMAGE_NAME }}:${{ env.IMAGE_TAG }} ${{ vars.DOCKER_INTERNAL_REGISTRY_URL }}/${{ env.SLIM_IMAGE_NAME }}:${{ env.IMAGE_TAG }}
        shell: bash

      - name: Test Execution Key
        id: get-test-execution-key
        run: |
          test_execution_key=$(echo '${{ inputs.xray_keys_and_ids }}' | jq -r '.test_execution_key_'${{ inputs.os }})
          echo "The Test Execution KEY : $test_execution_key"
          echo "test_execution_key=$test_execution_key" >> $GITHUB_OUTPUT
        shell: bash

      - name: Cypress e2e testing
        uses: ./.github/actions/cypress-e2e-testing
        with:
          name: ${{ inputs.name }}
          database_image: ${{ inputs.database_image }}
          web_image_os: ${{ inputs.os }}
          web_image_version: ${{ env.IMAGE_TAG }}
          openid_image_version: ${{ inputs.major_version }}
          saml_image_version: ${{ inputs.major_version }}
          module: ${{ inputs.module_name }}
          feature_file_path: ${{ matrix.feature }}
          test_tags: ${{ inputs.test_tags }}
          dependencies_lock_file: ${{ inputs.dependencies_lock_file }}
          test_execution_key: ${{ steps.get-test-execution-key.outputs.test_execution_key }}
          stability: ${{ inputs.stability }}
          target_stability: ${{ inputs.target_stability }}
          is_cloud: ${{ inputs.is_cloud }}
          artifactory_internal_repo_username: ${{ secrets.artifactory_internal_repo_username }}
          artifactory_internal_repo_password: ${{ secrets.artifactory_internal_repo_password }}

      - name: Replace / with - in the feature path
        id: feature-path
        if: ${{ ! cancelled() }}
        run: |
          feature_name="${{ matrix.feature }}"
          feature_name_with_dash="${feature_name//\//-}"
          echo "Modified Feature Name: $feature_name_with_dash"
          echo "feature_name_with_dash=$feature_name_with_dash" >> $GITHUB_OUTPUT

      - name: Upload test results
        if: failure()
        uses: actions/upload-artifact@b4b15b8c7c6ac21ea08fcf65892d2ee8f75cf882 # v4.4.3
        with:
          name: ${{ inputs.name }}-${{ inputs.os }}-test-results-${{ steps.feature-path.outputs.feature_name_with_dash }}
          path: ${{ inputs.module_name }}/tests/e2e/results/
          retention-days: 1

      - name: Move retries.json to reports directory and display warnings
        if: ${{ ! cancelled() }}
        run: |
            retriesFile="${{ inputs.module_name }}/tests/e2e/results/retries.json"
            if [ -f "$retriesFile" ]; then
              jq 'to_entries | .[].key' $retriesFile | while read -r testName; do
                echo "::warning::Following test was retried during execution: $testName (retries: $(jq ".$testName" $retriesFile))"
              done
              mv $retriesFile "${{ inputs.module_name }}/tests/e2e/results/reports/${{ steps.feature-path.outputs.feature_name_with_dash }}-retries.json"
            fi
        shell: bash

      - name: Upload test reports
        if: ${{ ! cancelled() }}
        uses: actions/upload-artifact@b4b15b8c7c6ac21ea08fcf65892d2ee8f75cf882 # v4.4.3
        with:
          name: ${{ inputs.name }}-${{ inputs.os }}-test-reports-${{ steps.feature-path.outputs.feature_name_with_dash }}
          path: ${{ inputs.module_name }}/tests/e2e/results/reports/*.json
          retention-days: 1

      - name: Upload xray reports
        if: ${{ ! cancelled() }}
        uses: actions/upload-artifact@b4b15b8c7c6ac21ea08fcf65892d2ee8f75cf882 # v4.4.3
        with:
          name: ${{ inputs.name }}-${{ inputs.os }}-xray-reports-${{ steps.feature-path.outputs.feature_name_with_dash }}
          path: ${{ inputs.module_name }}/tests/e2e/results/cucumber-logs/*.json
          retention-days: 1

  # This action is only for NIGHTLY and testing branches
  import-reports-to-xray:
    needs: [cypress-e2e-test-run]
    if: ${{ ! cancelled() && (inputs.stability == 'testing' || github.event_name == 'schedule') }}
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - uses: pnpm/action-setup@fe02b34f77f8bc703788d5817da081398fad5dd2 # v4.0.0
        with:
          version: 8

      - name: Download Artifacts
        uses: actions/download-artifact@87c55149d96e628cc2ef7e6fc2aab372015aec85 # v4.1.3
        with:
          pattern: ${{ inputs.name }}-${{ inputs.os }}-xray-reports-*
          path: ${{ inputs.name }}-json-xray-reports
          merge-multiple: true

      - name: Generate Xray Token
        id: generate-xray-token
        run: |
          token_response=$(curl -H "Content-Type: application/json" -X POST --data "{\"client_id\": \"${{ secrets.XRAY_CLIENT_ID }}\", \"client_secret\": \"${{ secrets.XRAY_CLIENT_SECRET }}\"}" "https://xray.cloud.getxray.app/api/v1/authenticate")
          xray_token=$(echo "$token_response" | sed -n 's/.*"\(.*\)".*/\1/p')
          echo "xray_token=$xray_token" >> $GITHUB_OUTPUT
        shell: bash

      - name: Keys
        run: |
          test_execution_key=$(echo '${{ inputs.xray_keys_and_ids }}' | jq -r '.test_execution_key_'${{ inputs.os }})
          test_plan_key=$(echo '${{ inputs.xray_keys_and_ids }}' | jq -r '.test_plan_key_'${{ inputs.os }})
          echo "The Test Execution KEY : $test_execution_key"
          echo "The Test Plan KEY: $test_plan_key"

      - name: Import results to xray
        run: |
          for file in "${{ inputs.name }}-json-xray-reports/"*.json
          do
            curl -H "Content-Type: application/json" -X POST -H "Authorization: Bearer ${{ steps.generate-xray-token.outputs.xray_token }}" --data @"$file" https://xray.cloud.getxray.app/api/v2/import/execution/cucumber
          done

  cypress-e2e-test-report:
    needs: [cypress-e2e-test-run]
    if: ${{ ! cancelled() }}
    runs-on: ubuntu-24.04

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - uses: pnpm/action-setup@fe02b34f77f8bc703788d5817da081398fad5dd2 # v4.0.0
        with:
          version: 8

      - name: Download Artifacts
        uses: actions/download-artifact@87c55149d96e628cc2ef7e6fc2aab372015aec85 # v4.1.3
        with:
          pattern: ${{ inputs.name }}-${{ inputs.os }}-test-reports-*
          path: ${{ inputs.name }}-json-reports
          merge-multiple: true

      - name: Merge reports
        run: |
          pnpx mochawesome-merge "${{ inputs.name }}-json-reports/**/*-report.json" > mochawesome.json

          if ls ${{ inputs.name }}-json-reports/*retries.json 1> /dev/null 2>&1; then
            cat ${{ inputs.name }}-json-reports/*retries.json | jq -s add > retries.json
          else
            echo "{}" > retries.json
          fi
        shell: bash

      - name: Publish report
        if: needs.cypress-e2e-test-run.result == 'failure'
        uses: ./.github/actions/publish-report
        with:
          check_name: ${{ inputs.name }}-report
          path: mochawesome.json
          format: cypress

      - name: Display retries summary
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        with:
          script: |
            const fs = require('fs');
            const retriesFile = 'retries.json';
            const retries = JSON.parse(fs.readFileSync(retriesFile, 'utf8'));
            if (Object.keys(retries).length > 0) {
              const outputTable = [
                [{data: 'Feature', header: true}, {data: 'Scenario', header: true}, {data: 'Retries', header: true}],
              ];
              const warningTitle = `${Object.keys(retries).length} tests were retried during execution`;

              let warningBody = JSON.stringify(retries, null, 2);
              for (const testName in retries) {
                const featureName = testName.split('>')[0];
                const scenarioName = testName.split('>').slice(1).join('>');
                outputTable.push([featureName, scenarioName, String(retries[testName])]);
              }

              // Display json to allow collect of metrics
              core.warning(warningBody, { title: warningTitle });

              core.summary
                .addHeading(`Retries Summary`)
                .addTable(outputTable)
                .addDetails(`Content of ${retriesFile}`, fs.readFileSync(retriesFile, 'utf8'))
                .write();
            }

  regroup-artifacts:
    needs: [cypress-e2e-test-run, import-reports-to-xray, cypress-e2e-test-report]
    if: ${{ ! cancelled() }}
    runs-on: ubuntu-24.04
    strategy:
      fail-fast: false
      matrix:
        type_of_report: [test-results, test-reports, xray-reports]
    steps:
      - name: Merge Artifacts
        uses: actions/upload-artifact/merge@6f51ac03b9356f520e9adb1b1b7802705f340c2b # v4.5.0
        if: ${{ ( contains(needs.cypress-e2e-test-run.result, 'failure') && ( matrix.type_of_report == 'test-results' || matrix.type_of_report == 'test-reports' ) ) || matrix.type_of_report == 'xray-reports' }}
        with:
          name: ${{ inputs.name }}-${{ inputs.os }}-${{ matrix.type_of_report }}
          pattern: ${{ inputs.name }}-${{ inputs.os }}-${{ matrix.type_of_report }}-*
          delete-merged: false # cannot be set to true due to random fails: Failed to DeleteArtifact: Unable to make request: ECONNRESET
          retention-days: 1

      - name: Delete merged artifacts
        if: |
          success() ||
          ( failure() && matrix.type_of_report == 'test-results' )
        uses: geekyeggo/delete-artifact@f275313e70c08f6120db482d7a6b98377786765b # v5.1.0
        with:
          name: ${{ inputs.name }}-${{ inputs.os }}-${{ matrix.type_of_report }}-*
          failOnError: false

  create-jira-nightly-ticket:
    needs: [cypress-e2e-test-run, import-reports-to-xray, cypress-e2e-test-report, regroup-artifacts]
    runs-on: ubuntu-24.04
    if: |
      inputs.is_nightly == 'true' && github.run_attempt == 1 &&
      (failure() || cancelled()) &&
      startsWith(github.ref_name, 'dev')
    steps:
      - name: Checkout sources
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Create Jira ticket if nightly build failure
        uses: ./.github/actions/create-jira-ticket
        with:
          jira_base_url: ${{ secrets.jira_base_url }}
          jira_user_email: ${{ secrets.jira_user_email }}
          jira_api_token: ${{ secrets.jira_api_token }}
          module_name: "centreon-web"
          ticket_labels: '["Nightly", "Pipeline", "nightly-${{ github.ref_name }}", "cypress-e2e"]'
