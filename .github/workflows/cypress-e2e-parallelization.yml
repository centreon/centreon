name: cypress-e2e-test

on:
  workflow_call:
    inputs:
      name:
        required: true
        type: string
      module_name:
        required: true
        type: string
      image_name:
        required: true
        type: string
      features_path:
        required: true
        type: string
      major_version:
        required: true
        type: string
      package_cache_key:
        required: false
        type: string
      package_directory:
        required: false
        type: string
      dependencies_lock_file:
        required: true
        type: string
        description: "The frontend dependencies lock file path"
      is_nightly:
        required: true
        type: string
    secrets:
      registry_username:
        required: true
      registry_password:
        required: true
      jira_base_url:
        required: true
      jira_user_email:
        required: true
      jira_api_token:
        required: true

jobs:
  cypress-e2e-test-list:
    runs-on: ubuntu-22.04
    outputs:
      features: ${{ steps.list-features.outputs.features }}

    steps:
      - name: Checkout sources
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - name: List features
        id: list-features
        run: |
          cd ${{ inputs.module_name }}
          echo "features=$(find ${{ inputs.features_path }} -type f -name "*.feature" -printf "%P\n" | sort | jq -R -s -c 'split("\n")[:-1]')" >> $GITHUB_OUTPUT

  cypress-e2e-test-run:
    needs: [cypress-e2e-test-list]
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        feature: ${{ fromJson(needs.cypress-e2e-test-list.outputs.features) }}
    name: ${{ matrix.feature }}

    env:
      IMAGE_TAG: ${{ github.head_ref || github.ref_name }}
      SLIM_IMAGE_NAME: ${{ inputs.image_name }}-slim-alma9

    steps:
      - name: Checkout sources
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - name: Restore packages
        if: "${{ inputs.package_cache_key != '' && inputs.package_directory != '' && contains(matrix.feature, 'platform-update') }}"
        uses: actions/cache/restore@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9 # v4.0.2
        with:
          path: ./*.rpm
          key: ${{ inputs.package_cache_key }}
          fail-on-cache-miss: true

      - name: Move packages
        if: "${{ inputs.package_cache_key != '' && inputs.package_directory != '' && contains(matrix.feature, 'platform-update') }}"
        run: |
          mkdir -p ${{ inputs.package_directory }}
          mv ./*.rpm ${{ inputs.package_directory }}
        shell: bash

      - name: Login to Registry
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: ${{ vars.DOCKER_INTERNAL_REGISTRY_URL }}
          username: ${{ secrets.registry_username }}
          password: ${{ secrets.registry_password }}

      - name: Restore standard slim image in cache
        uses: actions/cache/restore@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9 # v4.0.2
        with:
          path: /tmp/cache/docker-image
          key: docker-image-${{ env.SLIM_IMAGE_NAME }}-${{ env.IMAGE_TAG }}
          fail-on-cache-miss: true

      - name: Load standard slim image
        run: |
          docker load --input /tmp/cache/docker-image/${{ env.SLIM_IMAGE_NAME }}.tar
          docker tag ${{ env.SLIM_IMAGE_NAME }}:${{ env.IMAGE_TAG }} ${{ vars.DOCKER_INTERNAL_REGISTRY_URL }}/${{ env.SLIM_IMAGE_NAME }}:${{ env.IMAGE_TAG }}
        shell: bash

      - name: Cypress e2e testing
        uses: ./.github/actions/cypress-e2e-testing
        with:
          name: ${{ inputs.name }}
          web_image_version: ${{ github.head_ref || github.ref_name }}
          openid_image_version: ${{ inputs.major_version }}
          module: centreon
          feature_file_path: ${{ matrix.feature }}
          dependencies_lock_file: ${{ inputs.dependencies_lock_file }}

      - name: Upload test results
        if: failure()
        uses: actions/upload-artifact@b4b15b8c7c6ac21ea08fcf65892d2ee8f75cf882 # v4.4.3
        with:
          name: ${{ inputs.name }}-test-reports
          path: ${{ inputs.module_name }}/tests/e2e/cypress/results/reports/*.json
          retention-days: 1

  cypress-e2e-test-report:
    needs: [cypress-e2e-test-run]
    if: failure()
    runs-on: ubuntu-24.04

    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - uses: pnpm/action-setup@fe02b34f77f8bc703788d5817da081398fad5dd2 # v4.0.0
        with:
          version: 7

      - name: Download Artifacts
        uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a # v3.0.2
        with:
          name: ${{ inputs.name }}-test-reports
          path: ${{ inputs.name }}-json-reports

      - name: Merge reports
        run: |
          pnpx mochawesome-merge "${{ inputs.name }}-json-reports/**/*.json" > mochawesome.json
        shell: bash

      - name: Publish report
        uses: ./.github/actions/publish-report
        with:
          check_name: ${{ inputs.name }}-report
          path: mochawesome.json
          format: cypress
          urlFilePrefix: centreon

  create-jira-nightly-ticket:
    needs: [cypress-e2e-test-run, cypress-e2e-test-report]
    runs-on: ubuntu-24.04
    if: |
      inputs.is_nightly == 'true' && github.run_attempt == 1 &&
      (failure() || cancelled()) &&
      startsWith(github.ref_name, 'dev')
    steps:
      - name: Checkout sources
        uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0

      - name: Create Jira ticket if nightly build failure
        uses: ./.github/actions/create-jira-ticket
        with:
          jira_base_url: ${{ secrets.jira_base_url }}
          jira_user_email: ${{ secrets.jira_user_email }}
          jira_api_token: ${{ secrets.jira_api_token }}
          module_name: "centreon-web"
          ticket_labels: '["Nightly", "Pipeline", "nightly-${{ github.ref_name }}", "cypress-e2e"]'
