on:
  workflow_call:
    inputs:
      module_directory:
        type: string
        description: The module directory
        required: true
      module_name:
        type: string
        description: The project name
        required: true
      frontend_index_cache_key:
        type: string
        description: The index.html cache key
      frontend_index_file:
        type: string
        description: The index.html file path
      frontend_static_cache_key:
        type: string
        description: The static directory cache key
      frontend_static_directory:
        type: string
        description: The static directory
      backend_vendor_cache_key:
        type: string
        description: The vendor directory cache key
      backend_vendor_directory:
        type: string
        description: The vendor directory
      translation_cache_key:
        type: string
        description: The translation directory cache key
      translation_directory:
        type: string
        description: The translation directory
      major_version:
        type: string
        description: The major version
        required: true
      minor_version:
        type: string
        description: The minor version
        required: true
    secrets:
      token_download_centreon_com:
        required: true

jobs:
  deliver-sources:
    name: Deliver sources of ${{ inputs.module_name }} ${{ inputs.major_version }}.${{ inputs.minor_version }}
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v3

      - name: Restore index file cache
        if: "${{ inputs.frontend_index_file != '' && inputs.frontend_index_cache_key != '' }}"
        uses: actions/cache@v3
        with:
          path: ${{ inputs.frontend_index_file }}
          key: ${{ inputs.frontend_index_cache_key }}
          fail-on-cache-miss: true

      - name: Restore static directory cache
        if: "${{ inputs.frontend_static_directory != '' && inputs.frontend_static_cache_key != '' }}"
        uses: actions/cache@v3
        with:
          path: ${{ inputs.frontend_static_directory }}
          key: ${{ inputs.frontend_static_cache_key }}
          fail-on-cache-miss: true

      - name: Restore vendor directory cache
        if: "${{ inputs.backend_vendor_directory != '' && inputs.backend_vendor_cache_key != '' }}"
        uses: actions/cache@v3
        with:
          path: ${{ inputs.backend_vendor_directory }}
          key: ${{ inputs.backend_vendor_cache_key }}
          fail-on-cache-miss: true

      - name: Restore translation directory cache
        if: "${{ inputs.translation_directory != '' && inputs.translation_cache_key != '' }}"
        uses: actions/cache@v3
        with:
          path: ${{ inputs.translation_directory }}
          key: ${{ inputs.translation_cache_key }}
          fail-on-cache-miss: true

      - run: |
          set -x

          MAJOR_VERSION="${{ inputs.major_version }}"
          VERSION="${{ inputs.major_version }}.${{ inputs.minor_version }}"
          SRC_FILE="${{ inputs.module_name }}-$VERSION.tar.gz"

          mv "${{ inputs.module_directory }}" "${{ inputs.module_name }}-$VERSION"
          tar czf $SRC_FILE "${{ inputs.module_name }}-$VERSION"

          SRC_HASH=$(md5sum $SRC_FILE | cut -d ' ' -f 1)
          SRC_SIZE=$(stat -c '%s' $SRC_FILE)

          #aws s3 cp --acl public-read "$SRC_FILE" "s3://centreon-download/public/centreon/$SRC_FILE"
          #curl "https://download.centreon.com/api/?token=${{ secrets.token_download_centreon_com }}&product=${{ inputs.module_name }}&release=$MAJOR_VERSION&version=$VERSION&extension=tar.gz&md5=$SRC_HASH&size=$SRC_SIZE&ddos=0&dryrun=0"
        shell: bash

      - name: Upload package artifacts
        uses: actions/upload-artifact@v3
        with:
          name: sources-${{ inputs.module_name }}
          path: ./${{ inputs.module_name }}-${{ inputs.major_version }}.${{ inputs.minor_version }}.tar.gz
          retention-days: 1
