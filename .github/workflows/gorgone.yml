name: gorgone

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

on:
  workflow_dispatch:
  pull_request:
    paths:
      - "centreon-gorgone/**"
  push:
    branches:
      - develop
      - dev-[2-9][0-9].[0-9][0-9].x
      - master
      - "[2-9][0-9].[0-9][0-9].x"
    paths:
      - "centreon-gorgone/**"
    tags:
      - centreon-gorgone-*

env:
  base_directory: centreon-gorgone

jobs:
  get-version:
    uses: ./.github/workflows/get-version.yml
    with:
      version_file: centreon-gorgone/packaging/centreon-gorgone.spectemplate

  package:
    needs: [get-version]

    strategy:
      fail-fast: false
      matrix:
        distrib: [el8, el9, bullseye]
        include:
          - package_extension: rpm
            image: packaging-alma8
            distrib: el8
          - package_extension: rpm
            image: packaging-alma9
            distrib: el9
          - package_extension: deb
            image: packaging-bullseye
            distrib: bullseye

    uses: ./.github/workflows/package.yml
    with:
      base_directory: centreon-gorgone
      spec_file: centreon-gorgone/packaging/centreon-gorgone.spectemplate
      package_extension: ${{ matrix.package_extension }}
      image_name: ${{ matrix.image }}
      module_name: centreon-gorgone
      major_version: ${{ needs.get-version.outputs.major_version }}
      minor_version: ${{ needs.get-version.outputs.minor_version }}
      release: ${{ needs.get-version.outputs.release }}
      cache_key: ${{ github.sha }}-${{ github.run_id }}-${{ matrix.package_extension }}-${{ matrix.distrib }}
    secrets:
      registry_username: ${{ secrets.AUTOMATION_USERNAME }}
      registry_password: ${{ secrets.ARTIFACTORY_ACCESS_TOKEN }}

  deliver-rpm:
    runs-on: [self-hosted, common]
    needs: [get-version, package]
    if: ${{ contains(fromJson('["stable", "testing", "unstable"]'), needs.get-version.outputs.stability) }}
    strategy:
      matrix:
        distrib: [el8, el9]

    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Delivery
        uses: ./.github/actions/rpm-delivery
        with:
          module_name: gorgone
          repository_name: standard
          distrib: ${{ matrix.distrib }}
          version: ${{ needs.get-version.outputs.major_version }}
          minor_version: ${{ needs.get-version.outputs.minor_version }}
          release: ${{ needs.get-version.outputs.release }}
          nexus_username: ${{ secrets.NEXUS_USERNAME }}
          nexus_password: ${{ secrets.NEXUS_PASSWORD }}
          artifactory_token: ${{ secrets.ARTIFACTORY_ACCESS_TOKEN }}
          cache_key: ${{ github.sha }}-${{ github.run_id }}-rpm-${{ matrix.distrib }}
          update_repo_path: ${{ secrets.UPDATE_REPO_PATH }}
          cloudfront_id: ${{ secrets.CLOUDFRONT_ID }}
          yum_repo_address: ${{ secrets.YUM_REPO_ADDRESS }}
          yum_repo_key: ${{ secrets.YUM_REPO_KEY }}
          stability: ${{ needs.get-version.outputs.stability }}

  deliver-deb:
    runs-on: [self-hosted, common]
    needs: [get-version,package]
    if: ${{ contains(fromJson('["stable", "testing", "unstable"]'), needs.get-version.outputs.stability) }}
    strategy:
      matrix:
        distrib: [bullseye]

    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Delivery
        uses: ./.github/actions/deb-delivery
        with:
          module_name: centreon-gorgone
          distrib: ${{ matrix.distrib }}
          version: ${{ needs.get-version.outputs.major_version }}
          nexus_username: ${{ secrets.NEXUS_USERNAME }}
          nexus_password: ${{ secrets.NEXUS_PASSWORD }}
          artifactory_token: ${{ secrets.ARTIFACTORY_ACCESS_TOKEN }}
          cache_key: ${{ github.sha }}-${{ github.run_id }}-deb-${{ matrix.distrib }}
          stability: ${{ needs.get-version.outputs.stability }}
