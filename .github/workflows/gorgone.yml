name: gorgone

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

on:
  workflow_dispatch:
  pull_request:
    paths:
      - "centreon-gorgone/**"
  push:
    branches:
      - develop
      - dev-[2-9][0-9].[0-9][0-9].x
      - master
      - "[2-9][0-9].[0-9][0-9].x"
    paths:
      - "centreon-gorgone/**"

env:
  base_directory: centreon-gorgone

jobs:
  get-version:
    uses: ./.github/workflows/get-version.yml
    with:
      version_file: centreon-gorgone/packaging/centreon-gorgone.spectemplate

  veracode-analysis:
    needs: [get-version]
    uses: ./.github/workflows/veracode-analysis.yml
    with:
      module_directory: centreon-gorgone
      module_name: centreon-gorgone
      major_version: ${{ needs.get-version.outputs.major_version }}
      minor_version: ${{ needs.get-version.outputs.minor_version }}
      stability: ${{ needs.get-version.outputs.stability }}
    secrets:
      veracode_api_id: ${{ secrets.VERACODE_API_ID_GORG }}
      veracode_api_key: ${{ secrets.VERACODE_API_KEY_GORG }}
      veracode_srcclr_token: ${{ secrets.VERACODE_SRCCLR_TOKEN }}

  package:
    needs: [get-version]
    if: ${{ needs.get-version.outputs.stability != 'stable' }}

    strategy:
      fail-fast: false
      matrix:
        distrib: [el8, el9, bullseye]
        include:
          - package_extension: rpm
            image: packaging-alma8
            distrib: el8
          - package_extension: rpm
            image: packaging-alma9
            distrib: el9
          - package_extension: deb
            image: packaging-bullseye
            distrib: bullseye

    uses: ./.github/workflows/package.yml
    with:
      base_directory: centreon-gorgone
      spec_file: centreon-gorgone/packaging/centreon-gorgone.spectemplate
      package_extension: ${{ matrix.package_extension }}
      image_name: ${{ matrix.image }}
      module_name: centreon-gorgone
      major_version: ${{ needs.get-version.outputs.major_version }}
      minor_version: ${{ needs.get-version.outputs.minor_version }}
      release: ${{ needs.get-version.outputs.release }}
      commit_hash: ${{ github.sha }}
      cache_key: ${{ github.sha }}-${{ github.run_id }}-${{ matrix.package_extension }}-${{ matrix.distrib }}
    secrets:
      registry_username: ${{ secrets.DOCKER_REGISTRY_ID }}
      registry_password: ${{ secrets.DOCKER_REGISTRY_PASSWD }}

  deliver-sources:
    runs-on: [self-hosted, common]
    needs: [get-version, package]
    if: ${{ contains(fromJson('["stable"]'), needs.get-version.outputs.stability) }}

    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Deliver sources
        uses: ./.github/actions/release-sources
        with:
          bucket_directory: centreon-gorgone
          module_directory: centreon-gorgone
          module_name: centreon-gorgone
          major_version: ${{ needs.get-version.outputs.major_version }}
          minor_version: ${{ needs.get-version.outputs.minor_version }}
          token_download_centreon_com: ${{ secrets.TOKEN_DOWNLOAD_CENTREON_COM }}

  deliver-rpm:
    runs-on: [self-hosted, common]
    needs: [get-version, package]
    if: ${{ contains(fromJson('["testing", "unstable"]'), needs.get-version.outputs.stability) }}

    strategy:
      matrix:
        distrib: [el8, el9]

    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Delivery
        uses: ./.github/actions/rpm-delivery
        with:
          module_name: gorgone
          distrib: ${{ matrix.distrib }}
          version: ${{ needs.get-version.outputs.major_version }}
          artifactory_token: ${{ secrets.ARTIFACTORY_ACCESS_TOKEN }}
          cache_key: ${{ github.sha }}-${{ github.run_id }}-rpm-${{ matrix.distrib }}
          stability: ${{ needs.get-version.outputs.stability }}

  deliver-deb:
    runs-on: [self-hosted, common]
    needs: [get-version,package]
    if: ${{ contains(fromJson('["testing", "unstable"]'), needs.get-version.outputs.stability) }}

    strategy:
      matrix:
        distrib: [bullseye]

    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Delivery
        uses: ./.github/actions/deb-delivery
        with:
          module_name: gorgone
          distrib: ${{ matrix.distrib }}
          version: ${{ needs.get-version.outputs.major_version }}
          artifactory_token: ${{ secrets.ARTIFACTORY_ACCESS_TOKEN }}
          cache_key: ${{ github.sha }}-${{ github.run_id }}-deb-${{ matrix.distrib }}
          stability: ${{ needs.get-version.outputs.stability }}

  promote:
    needs: [get-version]
    if: ${{ contains(fromJson('["stable"]'), needs.get-version.outputs.stability) }}
    runs-on: [self-hosted, common]
    strategy:
      matrix:
        distrib: [el8, el9, bullseye]

    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Promote ${{ matrix.distrib }} to stable
        uses: ./.github/actions/promote-to-stable
        with:
          artifactory_token: ${{ secrets.ARTIFACTORY_ACCESS_TOKEN }}
          module: gorgone
          distrib: ${{ matrix.distrib }}
          major_version: ${{ needs.get-version.outputs.major_version }}
          minor_version: ${{ needs.get-version.outputs.minor_version }}
          stability: ${{ needs.get-version.outputs.stability }}

  check-stable-packages:
    needs: [get-version, promote]
    if: ${{ contains(fromJson('["stable"]'), needs.get-version.outputs.stability) }}

    uses: ./.github/workflows/check-pkg-availability.yml
    with:
      module: gorgone
      major_version: ${{ needs.get-version.outputs.major_version }}
    secrets:
      registry_username: ${{ secrets.DOCKER_REGISTRY_ID }}
      registry_password: ${{ secrets.DOCKER_REGISTRY_PASSWD }}