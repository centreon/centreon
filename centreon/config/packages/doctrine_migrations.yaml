doctrine_migrations:
    # List of namespace/path pairs to search for migrations, at least one required
    migrations_paths:
        'Migrations': '%kernel.project_dir%/src/Migrations'

    # Connection to use for the migrations
    connection: default

    # Entity manager to use for migrations. This overrides the "connection" setting.
    # em: default

    storage:
        # Default (SQL table) metadata storage configuration
        table_storage:
            table_name: 'migrations'
            version_column_name: 'version'
            version_column_length: 192
            executed_at_column_name: 'executed_at'

    # Possible values: "BY_YEAR", "BY_YEAR_AND_MONTH", false
    organize_migrations: false

    # Path to your custom migrations template
    custom_template: ~

    # Run all migrations in a transaction.
    all_or_nothing: false

    # Adds an extra check in the generated migrations to ensure that is executed on the same database type.
    check_database_platform: true

    # Whether or not to wrap migrations in a single transaction.
    transactional: true

    # Whether or not to enable the profiler collector to calculate and visualize migration status. This adds some queries overhead.
    # enable_profiler: false

    services:
        'Doctrine\Migrations\Version\MigrationFactory': Migrations\Factory\DatabaseMigrationFactory

services:
    _defaults:
        public: false
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, controller...

    Migrations\Factory\DatabaseMigrationFactory:
        arguments:
            $centreonDbName: '%database_db%'
            $storageDbName: '%database_dbstg%'
