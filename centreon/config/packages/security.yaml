security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
<<<<<<< HEAD
    enable_authenticator_manager: true
    access_decision_manager:
        strategy: unanimous
        allow_if_all_abstain: false
=======
>>>>>>> centreon/dev-21.10.x
    role_hierarchy:
        ROLE_ADMIN: ROLE_USER # An admin is also an user
    providers:
        contact_provider:
            id: contact.provider
    firewalls:
        free:
            stateless: true
<<<<<<< HEAD
            pattern: ^.*/api/(?:latest|beta|v[0-9]+|v[0-9]+\.[0-9]+)/platform/(?:versions|installation/status)$
            security: false
        authentication:
            pattern: ^.*(?<!administration)/authentication/(providers/configurations|users)(.*)$
=======
            pattern: ^.*/api/(?:latest|beta|v[0-9]+|v[0-9]+\.[0-9]+)/platform/versions$
            security: false
        authentication:
            pattern: ^.*/authentication/(.*)$
>>>>>>> centreon/dev-21.10.x
            security: false
        api:
            stateless: true
            pattern: ^(?!.*/api/(?:latest|beta|v[0-9]+|v[0-9]+\.[0-9]+)/login)/.*
            security: true
<<<<<<< HEAD
            custom_authenticators:
                - security.provider.tokenapi
                - security.provider.sessionapi
=======
            guard:
                authenticators:
                    - security.provider.tokenapi
                    - security.provider.sessionapi
>>>>>>> centreon/dev-21.10.x
            entry_point: security.provider.tokenapi
        login:
            pattern: ^.*/api/(?:latest|beta|v[0-9]+|v[0-9]+\.[0-9]+)/login$
            security: false

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
