doctrine_migrations:
    # List of namespace/path pairs to search for migrations, at least one required
    migrations_paths:
        'Migrations': '%kernel.project_dir%/src/Migrations/Realtime'

    # Connection to use for the migrations
    connection: centreon_storage

    # Entity manager to use for migrations. This overrides the "connection" setting.
    # em: default

    storage:
        # Default (SQL table) metadata storage configuration
        table_storage:
            table_name: 'migrations'
            version_column_name: 'version'
            version_column_length: 192
            executed_at_column_name: 'executed_at'

    # Possible values: "BY_YEAR", "BY_YEAR_AND_MONTH", false
    organize_migrations: false

    # Path to your custom migrations template
    custom_template: ~

    # Run all migrations in a transaction.
    all_or_nothing: false

    # Adds an extra check in the generated migrations to ensure that is executed on the same database type.
    check_database_platform: true

    # Whether or not to wrap migrations in a single transaction.
    transactional: true

    # Whether or not to enable the profiler collector to calculate and visualize migration status. This adds some queries overhead.
    # enable_profiler: false

    services:
        # Custom migration sorting service id
    #    'Doctrine\Migrations\Version\Comparator': ~

        # Custom migration classes factory
        'Doctrine\Migrations\Version\MigrationFactory': 'Migrations\Factory\MigrationFactoryDecorator'

    #factories:
        # Custom migration sorting service id via callables (MyCallableFactory must be a callable)
    #    'Doctrine\Migrations\Version\Comparator': 'MyCallableFactory'

services:
    _defaults:
        public: false
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, controller...

    Doctrine\Migrations\Version\DbalMigrationFactory: ~
    # Doctrine\Migrations\Version\MigrationFactory:
    #     class: Migrations\Factory\MigrationFactoryDecorator
    Migrations\Factory\MigrationFactoryDecorator:
        decorates: Doctrine\Migrations\Version\DbalMigrationFactory
        # arguments: ['@Migrations\Factory\MigrationFactoryDecorator.inner', Doctrine\Persistence\ManagerRegistry]
